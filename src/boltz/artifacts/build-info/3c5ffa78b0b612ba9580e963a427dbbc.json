{
  "id": "3c5ffa78b0b612ba9580e963a427dbbc",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/ERC20Swap.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity 0.8.10;\n\nimport \"./TransferHelper.sol\";\n\n// @title Hash timelock contract for ERC20 tokens\ncontract ERC20Swap {\n    // State variables\n\n    /// @dev Version of the contract used for compatibility checks\n    uint8 constant public version = 2;\n\n    /// @dev Mapping between value hashes of swaps and whether they have Ether locked in the contract\n    mapping (bytes32 => bool) public swaps;\n\n    // Events\n\n    event Lockup(\n        bytes32 indexed preimageHash,\n        uint256 amount,\n        address tokenAddress,\n        address claimAddress,\n        address indexed refundAddress,\n        uint timelock\n    );\n\n    event Claim(bytes32 indexed preimageHash, bytes32 preimage);\n    event Refund(bytes32 indexed preimageHash);\n\n    // Functions\n\n    // External functions\n\n    /// Locks tokens for a swap in the contract and forwards a specified amount of Ether to the claim address\n    /// @notice The amount of Ether forwarded to the claim address is the amount sent in the transaction and the refund address is the sender of the transaction\n    /// @dev Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether\n    /// @param preimageHash Preimage hash of the swap\n    /// @param amount Amount that should be locked in the contract in the smallest denomination of the token\n    /// @param tokenAddress Address of the token that should be locked in the contract\n    /// @param claimAddress Address that can claim the locked tokens\n    /// @param timelock Block height after which the locked tokens can be refunded\n    function lockPrepayMinerfee(\n        bytes32 preimageHash,\n        uint256 amount,\n        address tokenAddress,\n        address payable claimAddress,\n        uint timelock\n    ) external payable {\n        lock(preimageHash, amount, tokenAddress, claimAddress, timelock);\n\n        // Forward the amount of Ether sent in the transaction to the claim address\n        TransferHelper.transferEther(claimAddress, msg.value);\n    }\n\n    /// Claims tokens locked in the contract\n    /// @dev To query the arguments of this function, get the \"Lockup\" event logs for the SHA256 hash of the preimage\n    /// @param preimage Preimage of the swap\n    /// @param amount Amount locked in the contract for the swap in the smallest denomination of the token\n    /// @param tokenAddress Address of the token locked for the swap\n    /// @param refundAddress Address that locked the tokens in the contract\n    /// @param timelock Block height after which the locked tokens can be refunded\n    function claim(\n        bytes32 preimage,\n        uint amount,\n        address tokenAddress,\n        address refundAddress,\n        uint timelock\n    ) external {\n        // If the preimage is wrong, so will be its hash which will result in a wrong value hash and no swap being found\n        bytes32 preimageHash = sha256(abi.encodePacked(preimage));\n\n        // Passing \"msg.sender\" as \"claimAddress\" to \"hashValues\" ensures that only the destined address can claim\n        // All other addresses would produce a different hash for which no swap can be found in the \"swaps\" mapping\n        bytes32 hash = hashValues(\n            preimageHash,\n            amount,\n            tokenAddress,\n            msg.sender,\n            refundAddress,\n            timelock\n        );\n\n        // Make sure that the swap to be claimed has tokens locked\n        checkSwapIsLocked(hash);\n\n        // Delete the swap from the mapping to ensure that it cannot be claimed or refunded anymore\n        // This *HAS* to be done before actually sending the tokens to avoid reentrancy\n        // Reentrancy is a bigger problem when sending Ether but there is no real downside to deleting from the mapping first\n        delete swaps[hash];\n\n        // Emit the \"Claim\" event\n        emit Claim(preimageHash, preimage);\n\n        // Transfer the tokens to the claim address\n        TransferHelper.safeTransferToken(tokenAddress, msg.sender, amount);\n    }\n\n    /// Refunds tokens locked in the contract\n    /// @dev To query the arguments of this function, get the \"Lockup\" event logs for your refund address and the preimage hash if you have it\n    /// @dev For further explanations and reasoning behind the statements in this function, check the \"claim\" function\n    /// @param preimageHash Preimage hash of the swap\n    /// @param amount Amount locked in the contract for the swap in the smallest denomination of the token\n    /// @param tokenAddress Address of the token locked for the swap\n    /// @param claimAddress Address that that was destined to claim the funds\n    /// @param timelock Block height after which the locked Ether can be refunded\n    function refund(\n        bytes32 preimageHash,\n        uint amount,\n        address tokenAddress,\n        address claimAddress,\n        uint timelock\n    ) external {\n        // Make sure the timelock has expired already\n        // If the timelock is wrong, so will be the value hash of the swap which results in no swap being found\n        require(timelock <= block.number, \"ERC20Swap: swap has not timed out yet\");\n\n        bytes32 hash = hashValues(\n            preimageHash,\n            amount,\n            tokenAddress,\n            claimAddress,\n            msg.sender,\n            timelock\n        );\n\n        checkSwapIsLocked(hash);\n        delete swaps[hash];\n\n        emit Refund(preimageHash);\n\n        TransferHelper.safeTransferToken(tokenAddress, msg.sender, amount);\n    }\n\n    // Public functions\n\n    /// Locks tokens in the contract\n    /// @notice The refund address is the sender of the transaction\n    /// @dev This function is \"public\" so that it can be called from the outside and \"lockPrepayMinerfee\" function\n    /// @param preimageHash Preimage hash of the swap\n    /// @param amount Amount to be locked in the contract\n    /// @param tokenAddress Address of the token to be locked\n    /// @param claimAddress Address that can claim the locked tokens\n    /// @param timelock Block height after which the locked tokens can be refunded\n    function lock(\n        bytes32 preimageHash,\n        uint256 amount,\n        address tokenAddress,\n        address claimAddress,\n        uint timelock\n    ) public {\n        // Locking zero tokens in the contract is pointless\n        require(amount > 0, \"ERC20Swap: locked amount must not be zero\");\n\n        // Transfer the specified amount of tokens from the sender of the transaction to the contract\n        TransferHelper.safeTransferTokenFrom(tokenAddress, msg.sender, address(this), amount);\n\n        // Hash the values of the swap\n        bytes32 hash = hashValues(\n            preimageHash,\n            amount,\n            tokenAddress,\n            claimAddress,\n            msg.sender,\n            timelock\n        );\n\n        // Make sure no swap with this value hash exists yet\n        require(swaps[hash] == false, \"ERC20Swap: swap exists already\");\n\n        // Save to the state that funds were locked for this swap\n        swaps[hash] = true;\n\n        // Emit the \"Lockup\" event\n        emit Lockup(preimageHash, amount, tokenAddress, claimAddress, msg.sender, timelock);\n    }\n\n    /// Hashes all the values of a swap with Keccak256\n    /// @param preimageHash Preimage hash of the swap\n    /// @param amount Amount the swap has locked in the smallest denomination of the token\n    /// @param tokenAddress Address of the token of the swap\n    /// @param claimAddress Address that can claim the locked tokens\n    /// @param refundAddress Address that locked the tokens and can refund them\n    /// @param timelock Block height after which the locked tokens can be refunded\n    /// @return Value hash of the swap\n    function hashValues(\n        bytes32 preimageHash,\n        uint256 amount,\n        address tokenAddress,\n        address claimAddress,\n        address refundAddress,\n        uint timelock\n    ) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\n            preimageHash,\n            amount,\n            tokenAddress,\n            claimAddress,\n            refundAddress,\n            timelock\n        ));\n    }\n\n    // Private functions\n\n    /// Checks whether a swap has tokens locked in the contract\n    /// @dev This function reverts if the swap has no tokens locked in the contract\n    /// @param hash Value hash of the swap\n    function checkSwapIsLocked(bytes32 hash) private view {\n        require(swaps[hash] == true, \"ERC20Swap: swap has no tokens locked in the contract\");\n    }\n}\n"
      },
      "contracts/TransferHelper.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n// Copyright 2020 Uniswap team\n// Based on: https://github.com/Uniswap/uniswap-lib/blob/master/contracts/libraries/TransferHelper.sol\n\npragma solidity 0.8.10;\n\nlibrary TransferHelper {\n    /// Transfers Ether to an address\n    /// @dev This function reverts if transferring the Ether fails\n    /// @dev Please note that \".call\" forwards all leftover gas which means that sending Ether to accounts and contract is possible but also that you should specify or sanity check the gas limit\n    /// @param to Address to which the Ether should be sent\n    /// @param amount Amount of Ether to send in WEI\n    function transferEther(address payable to, uint amount) internal {\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"TransferHelper: could not transfer Ether\");\n    }\n\n    /// Transfers token to an address\n    /// @dev This function reverts if transferring the tokens fails\n    /// @dev This function supports non standard ERC20 tokens that have a \"transfer\" method that does not return a boolean\n    /// @param token Address of the token\n    /// @param to Address to which the tokens should be transferred\n    /// @param value Amount of token that should be transferred in the smallest denomination of the token\n    function safeTransferToken(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper: could not transfer ERC20 tokens\"\n        );\n    }\n\n    /// Transfers token from one address to another\n    /// @dev This function reverts if transferring the tokens fails\n    /// @dev This function supports non standard ERC20 tokens that have a \"transferFrom\" method that does not return a boolean\n    /// @dev Keep in mind that \"transferFrom\" requires an allowance of the \"from\" address for the caller that is equal or greater than the \"value\"\n    /// @param token Address of the token\n    /// @param from Address from which the tokens should be transferred\n    /// @param to Address to which the tokens should be transferred\n    /// @param value Amount of token that should be transferred in the smallest denomination of the token\n    function safeTransferTokenFrom(address token, address from, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper: could not transferFrom ERC20 tokens\"\n        );\n    }\n}\n"
      },
      "contracts/EtherSwap.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity 0.8.10;\n\nimport \"./TransferHelper.sol\";\n\n// @title Hash timelock contract for Ether\ncontract EtherSwap {\n    // State variables\n\n    /// @dev Version of the contract used for compatibility checks\n    uint8 constant public version = 2;\n\n    /// @dev Mapping between value hashes of swaps and whether they have Ether locked in the contract\n    mapping (bytes32 => bool) public swaps;\n\n    // Events\n\n    event Lockup(\n        bytes32 indexed preimageHash,\n        uint amount,\n        address claimAddress,\n        address indexed refundAddress,\n        uint timelock\n    );\n\n    event Claim(bytes32 indexed preimageHash, bytes32 preimage);\n    event Refund(bytes32 indexed preimageHash);\n\n    // Functions\n\n    // External functions\n\n    /// Locks Ether for a swap in the contract\n    /// @notice The amount locked is the Ether sent in the transaction and the refund address is the sender of the transaction\n    /// @param preimageHash Preimage hash of the swap\n    /// @param claimAddress Address that can claim the locked Ether\n    /// @param timelock Block height after which the locked Ether can be refunded\n    function lock(\n        bytes32 preimageHash,\n        address claimAddress,\n        uint timelock\n    ) external payable {\n        lockEther(preimageHash, msg.value, claimAddress, timelock);\n    }\n\n    /// Locks Ether for a swap in the contract and forwards a specified amount of Ether to the claim address\n    /// @notice The amount locked is the Ether sent in the transaction minus the prepay amount and the refund address is the sender of the transaction\n    /// @dev Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether\n    /// @param preimageHash Preimage hash of the swap\n    /// @param claimAddress Address that can claim the locked Ether\n    /// @param timelock Block height after which the locked Ether can be refunded\n    /// @param prepayAmount Amount that should be forwarded to the claim address\n    function lockPrepayMinerfee(\n        bytes32 preimageHash,\n        address payable claimAddress,\n        uint timelock,\n        uint prepayAmount\n    ) external payable {\n        // Revert on underflow in next statement\n        require(msg.value > prepayAmount, \"EtherSwap: sent amount must be greater than the prepay amount\");\n\n        // Lock the amount of Ether sent minus the prepay amount in the contract\n        lockEther(preimageHash, msg.value - prepayAmount, claimAddress, timelock);\n\n        // Forward the prepay amount to the claim address\n        TransferHelper.transferEther(claimAddress, prepayAmount);\n    }\n\n    /// Claims Ether locked in the contract\n    /// @dev To query the arguments of this function, get the \"Lockup\" event logs for the SHA256 hash of the preimage\n    /// @param preimage Preimage of the swap\n    /// @param amount Amount locked in the contract for the swap in WEI\n    /// @param refundAddress Address that locked the Ether in the contract\n    /// @param timelock Block height after which the locked Ether can be refunded\n    function claim(\n        bytes32 preimage,\n        uint amount,\n        address refundAddress,\n        uint timelock\n    ) external {\n        // If the preimage is wrong, so will be its hash which will result in a wrong value hash and no swap being found\n        bytes32 preimageHash = sha256(abi.encodePacked(preimage));\n\n        // Passing \"msg.sender\" as \"claimAddress\" to \"hashValues\" ensures that only the destined address can claim\n        // All other addresses would produce a different hash for which no swap can be found in the \"swaps\" mapping\n        bytes32 hash = hashValues(\n            preimageHash,\n            amount,\n            msg.sender,\n            refundAddress,\n            timelock\n        );\n\n        // Make sure that the swap to be claimed has Ether locked\n        checkSwapIsLocked(hash);\n        // Delete the swap from the mapping to ensure that it cannot be claimed or refunded anymore\n        // This *HAS* to be done before actually sending the Ether to avoid reentrancy\n        delete swaps[hash];\n\n        // Emit the claim event\n        emit Claim(preimageHash, preimage);\n\n        // Transfer the Ether to the claim address\n        TransferHelper.transferEther(payable(msg.sender), amount);\n    }\n\n    /// Refunds Ether locked in the contract\n    /// @dev To query the arguments of this function, get the \"Lockup\" event logs for your refund address and the preimage hash if you have it\n    /// @dev For further explanations and reasoning behind the statements in this function, check the \"claim\" function\n    /// @param preimageHash Preimage hash of the swap\n    /// @param amount Amount locked in the contract for the swap in WEI\n    /// @param claimAddress Address that that was destined to claim the funds\n    /// @param timelock Block height after which the locked Ether can be refunded\n    function refund(\n        bytes32 preimageHash,\n        uint amount,\n        address claimAddress,\n        uint timelock\n    ) external {\n        // Make sure the timelock has expired already\n        // If the timelock is wrong, so will be the value hash of the swap which results in no swap being found\n        require(timelock <= block.number, \"EtherSwap: swap has not timed out yet\");\n\n        bytes32 hash = hashValues(\n            preimageHash,\n            amount,\n            claimAddress,\n            msg.sender,\n            timelock\n        );\n\n        checkSwapIsLocked(hash);\n        delete swaps[hash];\n\n        emit Refund(preimageHash);\n\n        TransferHelper.transferEther(payable(msg.sender), amount);\n    }\n\n    // Public functions\n\n    /// Hashes all the values of a swap with Keccak256\n    /// @param preimageHash Preimage hash of the swap\n    /// @param amount Amount the swap has locked in WEI\n    /// @param claimAddress Address that can claim the locked Ether\n    /// @param refundAddress Address that locked the Ether and can refund them\n    /// @param timelock Block height after which the locked Ether can be refunded\n    /// @return Value hash of the swap\n    function hashValues(\n        bytes32 preimageHash,\n        uint amount,\n        address claimAddress,\n        address refundAddress,\n        uint timelock\n    ) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\n            preimageHash,\n            amount,\n            claimAddress,\n            refundAddress,\n            timelock\n        ));\n    }\n\n    // Private functions\n\n    /// Locks Ether in the contract\n    /// @notice The refund address is the sender of the transaction\n    /// @param preimageHash Preimage hash of the swap\n    /// @param amount Amount to be locked in the contract\n    /// @param claimAddress Address that can claim the locked Ether\n    /// @param timelock Block height after which the locked Ether can be refunded\n    function lockEther(bytes32 preimageHash, uint amount, address claimAddress, uint timelock) private {\n        // Locking zero WEI in the contract is pointless\n        require(amount > 0, \"EtherSwap: locked amount must not be zero\");\n\n        // Hash the values of the swap\n        bytes32 hash = hashValues(\n            preimageHash,\n            amount,\n            claimAddress,\n            msg.sender,\n            timelock\n        );\n\n        // Make sure no swap with this value hash exists yet\n        require(swaps[hash] == false, \"EtherSwap: swap exists already\");\n\n        // Save to the state that funds were locked for this swap\n        swaps[hash] = true;\n\n        // Emit the \"Lockup\" event\n        emit Lockup(preimageHash, amount, claimAddress, msg.sender, timelock);\n    }\n\n    /// Checks whether a swap has Ether locked in the contract\n    /// @dev This function reverts if the swap has no Ether locked in the contract\n    /// @param hash Value hash of the swap\n    function checkSwapIsLocked(bytes32 hash) private view {\n        require(swaps[hash] == true, \"EtherSwap: swap has no Ether locked in the contract\");\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000,
        "details": {
          "yul": true,
          "cse": true,
          "deduplicate": true,
          "orderLiterals": true,
          "constantOptimizer": true
        }
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/ERC20Swap.sol": {
        "ERC20Swap": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "preimage",
                  "type": "bytes32"
                }
              ],
              "name": "Claim",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "Lockup",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                }
              ],
              "name": "Refund",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimage",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "hashValues",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "lock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "lockPrepayMinerfee",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "refund",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "swaps",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610c05806100206000396000f3fe6080604052600436106100705760003560e01c806391644b2b1161004e57806391644b2b14610158578063b8080ab814610178578063cd413efa1461018b578063eb84e7f2146101ab57600080fd5b8063365047211461007557806354fd4d50146100975780637beb9d6d146100c3575b600080fd5b34801561008157600080fd5b50610095610090366004610a80565b6101eb565b005b3480156100a357600080fd5b506100ac600281565b60405160ff90911681526020015b60405180910390f35b3480156100cf57600080fd5b5061014a6100de366004610ad2565b60408051602081018890529081018690526bffffffffffffffffffffffff19606086811b82168184015285811b8216607484015284901b166088820152609c810182905260009060bc016040516020818303038152906040528051906020012090509695505050505050565b6040519081526020016100ba565b34801561016457600080fd5b50610095610173366004610a80565b61031c565b610095610186366004610a80565b6104e3565b34801561019757600080fd5b506100956101a6366004610a80565b610501565b3480156101b757600080fd5b506101db6101c6366004610b39565b60006020819052908152604090205460ff1681565b60405190151581526020016100ba565b438111156102665760405162461bcd60e51b815260206004820152602560248201527f4552433230537761703a207377617020686173206e6f742074696d6564206f7560448201527f742079657400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040805160208082018890528183018790526bffffffffffffffffffffffff19606087811b82168185015286811b8216607485015233901b166088830152609c8083018590528351808403909101815260bc90920190925280519101206102cc81610639565b600081815260208190526040808220805460ff191690555187917f3fbd469ec3a5ce074f975f76ce27e727ba21c99176917b97ae2e713695582a1291a26103148433876106c5565b505050505050565b600084116103925760405162461bcd60e51b815260206004820152602960248201527f4552433230537761703a206c6f636b656420616d6f756e74206d757374206e6f60448201527f74206265207a65726f0000000000000000000000000000000000000000000000606482015260840161025d565b61039e8333308761082d565b6040805160208082018890528183018790526bffffffffffffffffffffffff19606087811b82168185015286811b8216607485015233901b166088830152609c8083018590528351808403909101815260bc909201909252805191012060009060008181526020819052604090205490915060ff16156104605760405162461bcd60e51b815260206004820152601e60248201527f4552433230537761703a20737761702065786973747320616c72656164790000604482015260640161025d565b60008181526020819052604090819020805460ff1916600117905551339087907fa98eaa2bd8230d87a1a4c356f5c1d41cb85ff88131122ec8b1931cb9d31ae145906104d39089908990899089909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a3505050505050565b6104f0858585858561031c565b6104fa823461099d565b5050505050565b600060028660405160200161051891815260200190565b60408051601f198184030181529082905261053291610b52565b602060405180830381855afa15801561054f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105729190610b8d565b6040805160208082018490528183018990526bffffffffffffffffffffffff19606089811b82168185015233811b8216607485015288901b166088830152609c8083018790528351808403909101815260bc90920190925280519101209091506105db81610639565b60008181526020818152604091829020805460ff19169055905188815283917f5664142af3dcfc3dc3de45a43f75c746bd1d8c11170a5037fdf98bdb35775137910160405180910390a26106308533886106c5565b50505050505050565b60008181526020819052604090205460ff1615156001146106c25760405162461bcd60e51b815260206004820152603460248201527f4552433230537761703a207377617020686173206e6f20746f6b656e73206c6f60448201527f636b656420696e2074686520636f6e7472616374000000000000000000000000606482015260840161025d565b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929087169161074f9190610b52565b6000604051808303816000865af19150503d806000811461078c576040519150601f19603f3d011682016040523d82523d6000602084013e610791565b606091505b50915091508180156107bb5750805115806107bb5750808060200190518101906107bb9190610ba6565b6104fa5760405162461bcd60e51b815260206004820152602f60248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f657220455243323020746f6b656e730000000000000000000000000000000000606482015260840161025d565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916108bf9190610b52565b6000604051808303816000865af19150503d80600081146108fc576040519150601f19603f3d011682016040523d82523d6000602084013e610901565b606091505b509150915081801561092b57508051158061092b57508080602001905181019061092b9190610ba6565b6103145760405162461bcd60e51b815260206004820152603360248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f657246726f6d20455243323020746f6b656e7300000000000000000000000000606482015260840161025d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146109ea576040519150601f19603f3d011682016040523d82523d6000602084013e6109ef565b606091505b5050905080610a665760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f6572204574686572000000000000000000000000000000000000000000000000606482015260840161025d565b505050565b6001600160a01b03811681146106c257600080fd5b600080600080600060a08688031215610a9857600080fd5b85359450602086013593506040860135610ab181610a6b565b92506060860135610ac181610a6b565b949793965091946080013592915050565b60008060008060008060c08789031215610aeb57600080fd5b86359550602087013594506040870135610b0481610a6b565b93506060870135610b1481610a6b565b92506080870135610b2481610a6b565b8092505060a087013590509295509295509295565b600060208284031215610b4b57600080fd5b5035919050565b6000825160005b81811015610b735760208186018101518583015201610b59565b81811115610b82576000828501525b509190910192915050565b600060208284031215610b9f57600080fd5b5051919050565b600060208284031215610bb857600080fd5b81518015158114610bc857600080fd5b939250505056fea26469706673582212208a5c56ba6667e6098bbcb24dfa3e2df77a740e38293c7d797d81dc59943554b964736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC05 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91644B2B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x91644B2B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xB8080AB8 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xCD413EFA EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36504721 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x7BEB9D6D EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE DUP6 DUP2 SHL DUP3 AND PUSH1 0x74 DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x9C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xBC ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH2 0x95 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA JUMP JUMPDEST NUMBER DUP2 GT ISZERO PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A207377617020686173206E6F742074696D6564206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420796574000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x74 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x88 DUP4 ADD MSTORE PUSH1 0x9C DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xBC SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2CC DUP2 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP8 SWAP2 PUSH32 0x3FBD469EC3A5CE074F975F76CE27E727BA21C99176917B97AE2E713695582A12 SWAP2 LOG2 PUSH2 0x314 DUP5 CALLER DUP8 PUSH2 0x6C5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A206C6F636B656420616D6F756E74206D757374206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x39E DUP4 CALLER ADDRESS DUP8 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x74 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x88 DUP4 ADD MSTORE PUSH1 0x9C DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xBC SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A20737761702065786973747320616C72656164790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP1 DUP8 SWAP1 PUSH32 0xA98EAA2BD8230D87A1A4C356F5C1D41CB85FF88131122EC8B1931CB9D31AE145 SWAP1 PUSH2 0x4D3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4F0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0x4FA DUP3 CALLVALUE PUSH2 0x99D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x518 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x532 SWAP2 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 DUP4 ADD DUP10 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE CALLER DUP2 SHL DUP3 AND PUSH1 0x74 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x88 DUP4 ADD MSTORE PUSH1 0x9C DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xBC SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH2 0x5DB DUP2 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP9 DUP2 MSTORE DUP4 SWAP2 PUSH32 0x5664142AF3DCFC3DC3DE45A43F75C746BD1D8C11170A5037FDF98BDB35775137 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x630 DUP6 CALLER DUP9 PUSH2 0x6C5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A207377617020686173206E6F20746F6B656E73206C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636B656420696E2074686520636F6E7472616374000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x791 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7BB JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x7BB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657220455243323020746F6B656E730000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x901 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x92B JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x92B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657246726F6D20455243323020746F6B656E7300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572204574686572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0xAB1 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0xAC1 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0xB04 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0xB14 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0xB24 DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xB59 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x5C JUMP 0xBA PUSH7 0x67E6098BBCB24D STATICCALL RETURNDATACOPY 0x2D 0xF7 PUSH27 0x740E38293C7D797D81DC59943554B964736F6C634300080A003300 ",
              "sourceMap": "154:8422:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@checkSwapIsLocked_301": {
                  "entryPoint": 1593,
                  "id": 301,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@claim_125": {
                  "entryPoint": 1281,
                  "id": 125,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@hashValues_285": {
                  "entryPoint": null,
                  "id": 285,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "@lockPrepayMinerfee_66": {
                  "entryPoint": 1251,
                  "id": 66,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@lock_254": {
                  "entryPoint": 796,
                  "id": 254,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@refund_182": {
                  "entryPoint": 491,
                  "id": 182,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@safeTransferTokenFrom_723": {
                  "entryPoint": 2093,
                  "id": 723,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@safeTransferToken_676": {
                  "entryPoint": 1733,
                  "id": 676,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@swaps_11": {
                  "entryPoint": null,
                  "id": 11,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferEther_632": {
                  "entryPoint": 2461,
                  "id": 632,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@version_6": {
                  "entryPoint": null,
                  "id": 6,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 2982,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 2873,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32_fromMemory": {
                  "entryPoint": 2957,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_uint256t_addresst_address_payablet_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_addresst_uint256": {
                  "entryPoint": 2770,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 6
                },
                "abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256": {
                  "entryPoint": 2688,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 2898,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_017ef59273f738ec3dc7aa0d17f5d5cea19adfa230f737fd11fca22a8d9a9aaa__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_10fea0c78e908f210d848e7a98d3cac77434f4acce985bbc4d4a1dc58ae1df2a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1c419ac3444d43f0996a1f6a9e1bf15f20a3b94ca4b40663e6c230ef14a7c97a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_57b2db51b3a8aa47538f98b4f3a98580669ecce4e20eac0e2c83ed4645a5e030__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5ddbe4307f7934798b935bbbbff4735790ceff4998627aa232c5779314f13081__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9864c8ca1b13e0816f616ca8a4eeec0f07f19962796a417be3c6a3028de15bf6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 2667,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:8804:3",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:3",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:109:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "155:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "158:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:3"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:3"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "100:42:3",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:54:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:65:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "72:73:3"
                              },
                              "nodeType": "YulIf",
                              "src": "69:93:3"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48:5:3",
                            "type": ""
                          }
                        ],
                        "src": "14:154:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "311:456:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "358:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "367:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "370:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "360:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "360:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "360:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "332:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "341:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "353:3:3",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:33:3"
                              },
                              "nodeType": "YulIf",
                              "src": "321:53:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "383:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "406:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "393:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "393:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "383:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "425:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "452:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "463:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "448:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "448:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "435:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "435:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "425:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "476:45:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "506:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "517:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "502:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "502:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "489:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "480:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "555:5:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "530:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "530:31:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "530:31:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "570:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "580:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "570:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "594:47:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "626:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "637:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "622:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "622:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "609:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "609:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "598:7:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "675:7:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "650:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "650:33:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "650:33:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "692:17:3",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "702:7:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "692:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "718:43:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "745:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "756:3:3",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "741:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "741:19:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "728:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "728:33:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "718:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "245:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "256:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "268:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "276:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "284:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "292:6:3",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "300:6:3",
                            "type": ""
                          }
                        ],
                        "src": "173:594:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "869:87:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "879:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "891:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "902:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "887:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "887:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "879:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "921:9:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "936:6:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "944:4:3",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "932:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "932:17:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "914:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "914:36:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "914:36:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "838:9:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "849:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "860:4:3",
                            "type": ""
                          }
                        ],
                        "src": "772:184:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1116:581:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1163:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1172:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1175:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1165:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1165:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1165:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1137:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1146:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1133:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1133:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1158:3:3",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1129:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1129:33:3"
                              },
                              "nodeType": "YulIf",
                              "src": "1126:53:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1188:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1211:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1198:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1198:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1188:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1230:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1257:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1268:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1253:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1253:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1240:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1230:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1281:45:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1311:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1322:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1307:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1307:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1294:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1294:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1285:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1360:5:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1335:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1335:31:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1335:31:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1375:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1385:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1375:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1399:47:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1431:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1442:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1427:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1427:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1414:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1414:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1403:7:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1480:7:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1455:33:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1455:33:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1497:17:3",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1507:7:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1523:48:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1555:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1566:3:3",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1551:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1551:19:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1538:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1538:33:3"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1527:7:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1605:7:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1580:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1580:33:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1580:33:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1622:17:3",
                              "value": {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "1632:7:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1622:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1648:43:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1675:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1686:3:3",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1671:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1671:19:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1658:33:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "1648:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1042:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1053:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1065:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1073:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1081:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1089:6:3",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1097:6:3",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1105:6:3",
                            "type": ""
                          }
                        ],
                        "src": "961:736:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1803:76:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1813:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1825:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1836:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1821:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1821:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1813:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1855:9:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1866:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1848:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1848:25:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1848:25:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1772:9:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1783:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1794:4:3",
                            "type": ""
                          }
                        ],
                        "src": "1702:177:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2030:456:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2077:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2086:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2089:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2079:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2079:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2079:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2051:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2060:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2047:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2047:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2072:3:3",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2043:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2043:33:3"
                              },
                              "nodeType": "YulIf",
                              "src": "2040:53:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2102:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2125:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2112:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2112:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2102:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2144:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2171:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2182:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2167:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2167:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2154:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2154:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2144:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2195:45:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2225:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2236:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2221:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2221:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2208:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2208:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2199:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2274:5:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2249:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2249:31:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2249:31:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2289:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2299:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2289:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2313:47:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2345:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2356:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2341:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2341:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2328:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2328:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2317:7:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2394:7:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2369:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2369:33:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2369:33:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2411:17:3",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "2421:7:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2437:43:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2464:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2475:3:3",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2460:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2460:19:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2447:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2447:33:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2437:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_address_payablet_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1964:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1975:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1987:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1995:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2003:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2011:6:3",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2019:6:3",
                            "type": ""
                          }
                        ],
                        "src": "1884:602:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2561:110:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2607:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2616:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2619:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2609:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2609:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2609:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2582:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2591:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2578:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2578:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2603:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2574:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2574:32:3"
                              },
                              "nodeType": "YulIf",
                              "src": "2571:52:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2632:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2655:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2642:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2642:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2632:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2527:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2538:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2550:6:3",
                            "type": ""
                          }
                        ],
                        "src": "2491:180:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2771:92:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2781:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2793:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2804:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2789:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2789:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2781:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2823:9:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2848:6:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2841:6:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2841:14:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2834:6:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2834:22:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2816:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2816:41:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2816:41:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2740:9:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2751:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2762:4:3",
                            "type": ""
                          }
                        ],
                        "src": "2676:187:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3042:227:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3059:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3070:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3052:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3052:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3052:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3093:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3104:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3089:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3089:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3109:2:3",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3082:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3082:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3082:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3132:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3143:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3128:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3128:18:3"
                                  },
                                  {
                                    "hexValue": "4552433230537761703a207377617020686173206e6f742074696d6564206f75",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3148:34:3",
                                    "type": "",
                                    "value": "ERC20Swap: swap has not timed ou"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3121:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3121:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3121:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3203:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3214:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3199:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3199:18:3"
                                  },
                                  {
                                    "hexValue": "7420796574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3219:7:3",
                                    "type": "",
                                    "value": "t yet"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3192:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3192:35:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3192:35:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3236:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3248:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3259:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3244:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3244:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3236:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_017ef59273f738ec3dc7aa0d17f5d5cea19adfa230f737fd11fca22a8d9a9aaa__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3019:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3033:4:3",
                            "type": ""
                          }
                        ],
                        "src": "2868:401:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3533:355:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3550:3:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3555:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3543:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3543:19:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3543:19:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3582:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3587:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3578:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3578:12:3"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3592:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3571:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3571:28:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3571:28:3"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3608:41:3",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3622:26:3",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3618:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3618:31:3"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3612:2:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3669:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3674:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3665:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3665:12:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3687:2:3",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value2",
                                            "nodeType": "YulIdentifier",
                                            "src": "3691:6:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3683:3:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3683:15:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3700:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3679:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3679:24:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3658:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3658:46:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3658:46:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3724:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3729:2:3",
                                        "type": "",
                                        "value": "84"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3720:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3720:12:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3742:2:3",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "3746:6:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3738:3:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3738:15:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3755:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3734:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3734:24:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3713:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3713:46:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3713:46:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3779:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3784:3:3",
                                        "type": "",
                                        "value": "104"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3775:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3775:13:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3798:2:3",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value4",
                                            "nodeType": "YulIdentifier",
                                            "src": "3802:6:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3794:3:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3794:15:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3811:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3790:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3790:24:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3768:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3768:47:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3768:47:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3835:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3840:3:3",
                                        "type": "",
                                        "value": "124"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3831:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3831:13:3"
                                  },
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "3846:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3824:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3824:29:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3824:29:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3862:20:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3873:3:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3878:3:3",
                                    "type": "",
                                    "value": "156"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3869:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3869:13:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3862:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3469:3:3",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "3474:6:3",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3482:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3490:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3498:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3506:6:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3514:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3525:3:3",
                            "type": ""
                          }
                        ],
                        "src": "3274:614:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4067:231:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4084:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4095:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4077:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4077:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4077:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4118:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4129:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4114:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4114:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4134:2:3",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4107:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4107:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4107:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4157:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4168:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4153:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4153:18:3"
                                  },
                                  {
                                    "hexValue": "4552433230537761703a206c6f636b656420616d6f756e74206d757374206e6f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4173:34:3",
                                    "type": "",
                                    "value": "ERC20Swap: locked amount must no"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4146:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4146:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4146:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4228:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4239:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4224:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4224:18:3"
                                  },
                                  {
                                    "hexValue": "74206265207a65726f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4244:11:3",
                                    "type": "",
                                    "value": "t be zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4217:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4217:39:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4217:39:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4265:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4277:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4288:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4273:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4273:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4265:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_57b2db51b3a8aa47538f98b4f3a98580669ecce4e20eac0e2c83ed4645a5e030__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4044:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4058:4:3",
                            "type": ""
                          }
                        ],
                        "src": "3893:405:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4477:180:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4494:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4505:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4487:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4487:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4487:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4528:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4539:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4524:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4524:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4544:2:3",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4517:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4517:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4517:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4567:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4578:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4563:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4563:18:3"
                                  },
                                  {
                                    "hexValue": "4552433230537761703a20737761702065786973747320616c7265616479",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4583:32:3",
                                    "type": "",
                                    "value": "ERC20Swap: swap exists already"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4556:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4556:60:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4556:60:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4625:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4637:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4648:2:3",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4633:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4633:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4625:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1c419ac3444d43f0996a1f6a9e1bf15f20a3b94ca4b40663e6c230ef14a7c97a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4454:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4468:4:3",
                            "type": ""
                          }
                        ],
                        "src": "4303:354:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4847:285:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4857:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4869:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4880:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4865:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4865:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4857:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4900:9:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4911:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4893:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4893:25:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4893:25:3"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4927:52:3",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4937:42:3",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4931:2:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4999:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5010:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4995:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4995:18:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5019:6:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5027:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5015:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5015:15:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4988:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4988:43:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4988:43:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5051:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5062:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5047:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5047:18:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "5071:6:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5079:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5067:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5067:15:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5040:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5040:43:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5040:43:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5103:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5114:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5099:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5099:18:3"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5119:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5092:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5092:34:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5092:34:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4792:9:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4803:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4811:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4819:6:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4827:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4838:4:3",
                            "type": ""
                          }
                        ],
                        "src": "4662:470:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5256:63:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5273:3:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5278:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5266:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5266:19:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5266:19:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5294:19:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5305:3:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5310:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5301:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5301:12:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5294:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5232:3:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5237:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5248:3:3",
                            "type": ""
                          }
                        ],
                        "src": "5137:182:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5461:289:3",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5471:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5491:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5485:5:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5485:13:3"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5475:6:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5507:10:3",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5516:1:3",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "5511:1:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5578:77:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "5603:3:3"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "5608:1:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5599:3:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5599:11:3"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5626:6:3"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5634:1:3"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5622:3:3"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5622:14:3"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "5638:4:3",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5618:3:3"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5618:25:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5612:5:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5612:32:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5592:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5592:53:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5592:53:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5537:1:3"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5540:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5534:2:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5534:13:3"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5548:21:3",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5550:17:3",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5559:1:3"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5562:4:3",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5555:3:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5555:12:3"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5550:1:3"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5530:3:3",
                                "statements": []
                              },
                              "src": "5526:129:3"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5681:31:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "5694:3:3"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "5699:6:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5690:3:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5690:16:3"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5708:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5683:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5683:27:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5683:27:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5670:1:3"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5673:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5667:2:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5667:13:3"
                              },
                              "nodeType": "YulIf",
                              "src": "5664:48:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5721:23:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5732:3:3"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5737:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5728:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5728:16:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5721:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5437:3:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5442:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5453:3:3",
                            "type": ""
                          }
                        ],
                        "src": "5324:426:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5836:103:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5882:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5891:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5894:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5884:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5884:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5884:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5857:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5866:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5853:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5853:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5878:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5849:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5849:32:3"
                              },
                              "nodeType": "YulIf",
                              "src": "5846:52:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5907:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5923:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5917:5:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5917:16:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5907:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5802:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5813:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5825:6:3",
                            "type": ""
                          }
                        ],
                        "src": "5755:184:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6118:242:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6135:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6146:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6128:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6128:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6128:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6169:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6180:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6165:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6165:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6185:2:3",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6158:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6158:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6158:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6208:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6219:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6204:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6204:18:3"
                                  },
                                  {
                                    "hexValue": "4552433230537761703a207377617020686173206e6f20746f6b656e73206c6f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6224:34:3",
                                    "type": "",
                                    "value": "ERC20Swap: swap has no tokens lo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6197:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6197:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6197:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6279:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6290:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6275:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6275:18:3"
                                  },
                                  {
                                    "hexValue": "636b656420696e2074686520636f6e7472616374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6295:22:3",
                                    "type": "",
                                    "value": "cked in the contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6268:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6268:50:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6268:50:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6327:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6339:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6350:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6335:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6335:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6327:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9864c8ca1b13e0816f616ca8a4eeec0f07f19962796a417be3c6a3028de15bf6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6095:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6109:4:3",
                            "type": ""
                          }
                        ],
                        "src": "5944:416:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6494:168:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6504:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6516:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6527:2:3",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6512:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6512:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6504:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6546:9:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6561:6:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6569:42:3",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6557:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6557:55:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6539:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6539:74:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6539:74:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6633:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6644:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6629:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6629:18:3"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6649:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6622:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6622:34:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6622:34:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6455:9:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6466:6:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6474:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6485:4:3",
                            "type": ""
                          }
                        ],
                        "src": "6365:297:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6745:199:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6791:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6800:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6803:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6793:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6793:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6793:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6766:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6775:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6762:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6762:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6787:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6758:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6758:32:3"
                              },
                              "nodeType": "YulIf",
                              "src": "6755:52:3"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6816:29:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6835:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6829:5:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6829:16:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "6820:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6898:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6907:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6910:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6900:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6900:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6900:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6867:5:3"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "6888:5:3"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "6881:6:3"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6881:13:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6874:6:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6874:21:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6864:2:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6864:32:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6857:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6857:40:3"
                              },
                              "nodeType": "YulIf",
                              "src": "6854:60:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6923:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6933:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6923:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6711:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6722:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6734:6:3",
                            "type": ""
                          }
                        ],
                        "src": "6667:277:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7123:237:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7140:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7151:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7133:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7133:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7133:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7174:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7185:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7170:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7170:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7190:2:3",
                                    "type": "",
                                    "value": "47"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7163:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7163:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7163:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7213:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7224:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7209:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7209:18:3"
                                  },
                                  {
                                    "hexValue": "5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7229:34:3",
                                    "type": "",
                                    "value": "TransferHelper: could not transf"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7202:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7202:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7202:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7284:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7295:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7280:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7280:18:3"
                                  },
                                  {
                                    "hexValue": "657220455243323020746f6b656e73",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7300:17:3",
                                    "type": "",
                                    "value": "er ERC20 tokens"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7273:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7273:45:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7273:45:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7327:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7339:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7350:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7335:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7335:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7327:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5ddbe4307f7934798b935bbbbff4735790ceff4998627aa232c5779314f13081__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7100:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7114:4:3",
                            "type": ""
                          }
                        ],
                        "src": "6949:411:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7522:241:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7532:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7544:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7555:2:3",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7540:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7540:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7532:4:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7567:52:3",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7577:42:3",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7571:2:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7635:9:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7650:6:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7658:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7646:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7646:15:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7628:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7628:34:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7628:34:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7682:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7693:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7678:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7678:18:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7702:6:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7710:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7698:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7698:15:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7671:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7671:43:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7671:43:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7734:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7745:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7730:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7730:18:3"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7750:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7723:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7723:34:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7723:34:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7475:9:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7486:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7494:6:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7502:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7513:4:3",
                            "type": ""
                          }
                        ],
                        "src": "7365:398:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7942:241:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7959:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7970:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7952:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7952:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7952:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7993:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8004:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7989:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7989:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8009:2:3",
                                    "type": "",
                                    "value": "51"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7982:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7982:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7982:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8032:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8043:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8028:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8028:18:3"
                                  },
                                  {
                                    "hexValue": "5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8048:34:3",
                                    "type": "",
                                    "value": "TransferHelper: could not transf"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8021:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8021:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8021:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8103:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8114:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8099:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8099:18:3"
                                  },
                                  {
                                    "hexValue": "657246726f6d20455243323020746f6b656e73",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8119:21:3",
                                    "type": "",
                                    "value": "erFrom ERC20 tokens"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8092:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8092:49:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8092:49:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8150:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8162:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8173:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8158:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8158:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8150:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_10fea0c78e908f210d848e7a98d3cac77434f4acce985bbc4d4a1dc58ae1df2a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7919:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7933:4:3",
                            "type": ""
                          }
                        ],
                        "src": "7768:415:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8379:14:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8381:10:3",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8388:3:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8381:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8363:3:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8371:3:3",
                            "type": ""
                          }
                        ],
                        "src": "8188:205:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8572:230:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8589:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8600:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8582:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8582:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8582:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8623:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8634:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8619:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8619:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8639:2:3",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8612:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8612:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8612:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8662:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8673:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8658:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8658:18:3"
                                  },
                                  {
                                    "hexValue": "5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8678:34:3",
                                    "type": "",
                                    "value": "TransferHelper: could not transf"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8651:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8651:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8651:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8733:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8744:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8729:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8729:18:3"
                                  },
                                  {
                                    "hexValue": "6572204574686572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8749:10:3",
                                    "type": "",
                                    "value": "er Ether"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8722:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8722:38:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8722:38:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8769:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8781:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8792:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8777:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8777:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8769:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8549:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8563:4:3",
                            "type": ""
                          }
                        ],
                        "src": "8398:404:3"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_address_payablet_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_017ef59273f738ec3dc7aa0d17f5d5cea19adfa230f737fd11fca22a8d9a9aaa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20Swap: swap has not timed ou\")\n        mstore(add(headStart, 96), \"t yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 64), and(shl(96, value2), _1))\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        mstore(add(pos, 104), and(shl(96, value4), _1))\n        mstore(add(pos, 124), value5)\n        end := add(pos, 156)\n    }\n    function abi_encode_tuple_t_stringliteral_57b2db51b3a8aa47538f98b4f3a98580669ecce4e20eac0e2c83ed4645a5e030__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC20Swap: locked amount must no\")\n        mstore(add(headStart, 96), \"t be zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1c419ac3444d43f0996a1f6a9e1bf15f20a3b94ca4b40663e6c230ef14a7c97a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Swap: swap exists already\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9864c8ca1b13e0816f616ca8a4eeec0f07f19962796a417be3c6a3028de15bf6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC20Swap: swap has no tokens lo\")\n        mstore(add(headStart, 96), \"cked in the contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ddbe4307f7934798b935bbbbff4735790ceff4998627aa232c5779314f13081__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"TransferHelper: could not transf\")\n        mstore(add(headStart, 96), \"er ERC20 tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_10fea0c78e908f210d848e7a98d3cac77434f4acce985bbc4d4a1dc58ae1df2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"TransferHelper: could not transf\")\n        mstore(add(headStart, 96), \"erFrom ERC20 tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"TransferHelper: could not transf\")\n        mstore(add(headStart, 96), \"er Ether\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 3,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100705760003560e01c806391644b2b1161004e57806391644b2b14610158578063b8080ab814610178578063cd413efa1461018b578063eb84e7f2146101ab57600080fd5b8063365047211461007557806354fd4d50146100975780637beb9d6d146100c3575b600080fd5b34801561008157600080fd5b50610095610090366004610a80565b6101eb565b005b3480156100a357600080fd5b506100ac600281565b60405160ff90911681526020015b60405180910390f35b3480156100cf57600080fd5b5061014a6100de366004610ad2565b60408051602081018890529081018690526bffffffffffffffffffffffff19606086811b82168184015285811b8216607484015284901b166088820152609c810182905260009060bc016040516020818303038152906040528051906020012090509695505050505050565b6040519081526020016100ba565b34801561016457600080fd5b50610095610173366004610a80565b61031c565b610095610186366004610a80565b6104e3565b34801561019757600080fd5b506100956101a6366004610a80565b610501565b3480156101b757600080fd5b506101db6101c6366004610b39565b60006020819052908152604090205460ff1681565b60405190151581526020016100ba565b438111156102665760405162461bcd60e51b815260206004820152602560248201527f4552433230537761703a207377617020686173206e6f742074696d6564206f7560448201527f742079657400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040805160208082018890528183018790526bffffffffffffffffffffffff19606087811b82168185015286811b8216607485015233901b166088830152609c8083018590528351808403909101815260bc90920190925280519101206102cc81610639565b600081815260208190526040808220805460ff191690555187917f3fbd469ec3a5ce074f975f76ce27e727ba21c99176917b97ae2e713695582a1291a26103148433876106c5565b505050505050565b600084116103925760405162461bcd60e51b815260206004820152602960248201527f4552433230537761703a206c6f636b656420616d6f756e74206d757374206e6f60448201527f74206265207a65726f0000000000000000000000000000000000000000000000606482015260840161025d565b61039e8333308761082d565b6040805160208082018890528183018790526bffffffffffffffffffffffff19606087811b82168185015286811b8216607485015233901b166088830152609c8083018590528351808403909101815260bc909201909252805191012060009060008181526020819052604090205490915060ff16156104605760405162461bcd60e51b815260206004820152601e60248201527f4552433230537761703a20737761702065786973747320616c72656164790000604482015260640161025d565b60008181526020819052604090819020805460ff1916600117905551339087907fa98eaa2bd8230d87a1a4c356f5c1d41cb85ff88131122ec8b1931cb9d31ae145906104d39089908990899089909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a3505050505050565b6104f0858585858561031c565b6104fa823461099d565b5050505050565b600060028660405160200161051891815260200190565b60408051601f198184030181529082905261053291610b52565b602060405180830381855afa15801561054f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105729190610b8d565b6040805160208082018490528183018990526bffffffffffffffffffffffff19606089811b82168185015233811b8216607485015288901b166088830152609c8083018790528351808403909101815260bc90920190925280519101209091506105db81610639565b60008181526020818152604091829020805460ff19169055905188815283917f5664142af3dcfc3dc3de45a43f75c746bd1d8c11170a5037fdf98bdb35775137910160405180910390a26106308533886106c5565b50505050505050565b60008181526020819052604090205460ff1615156001146106c25760405162461bcd60e51b815260206004820152603460248201527f4552433230537761703a207377617020686173206e6f20746f6b656e73206c6f60448201527f636b656420696e2074686520636f6e7472616374000000000000000000000000606482015260840161025d565b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929087169161074f9190610b52565b6000604051808303816000865af19150503d806000811461078c576040519150601f19603f3d011682016040523d82523d6000602084013e610791565b606091505b50915091508180156107bb5750805115806107bb5750808060200190518101906107bb9190610ba6565b6104fa5760405162461bcd60e51b815260206004820152602f60248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f657220455243323020746f6b656e730000000000000000000000000000000000606482015260840161025d565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916108bf9190610b52565b6000604051808303816000865af19150503d80600081146108fc576040519150601f19603f3d011682016040523d82523d6000602084013e610901565b606091505b509150915081801561092b57508051158061092b57508080602001905181019061092b9190610ba6565b6103145760405162461bcd60e51b815260206004820152603360248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f657246726f6d20455243323020746f6b656e7300000000000000000000000000606482015260840161025d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146109ea576040519150601f19603f3d011682016040523d82523d6000602084013e6109ef565b606091505b5050905080610a665760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f6572204574686572000000000000000000000000000000000000000000000000606482015260840161025d565b505050565b6001600160a01b03811681146106c257600080fd5b600080600080600060a08688031215610a9857600080fd5b85359450602086013593506040860135610ab181610a6b565b92506060860135610ac181610a6b565b949793965091946080013592915050565b60008060008060008060c08789031215610aeb57600080fd5b86359550602087013594506040870135610b0481610a6b565b93506060870135610b1481610a6b565b92506080870135610b2481610a6b565b8092505060a087013590509295509295509295565b600060208284031215610b4b57600080fd5b5035919050565b6000825160005b81811015610b735760208186018101518583015201610b59565b81811115610b82576000828501525b509190910192915050565b600060208284031215610b9f57600080fd5b5051919050565b600060208284031215610bb857600080fd5b81518015158114610bc857600080fd5b939250505056fea26469706673582212208a5c56ba6667e6098bbcb24dfa3e2df77a740e38293c7d797d81dc59943554b964736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91644B2B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x91644B2B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xB8080AB8 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xCD413EFA EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36504721 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x7BEB9D6D EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE DUP6 DUP2 SHL DUP3 AND PUSH1 0x74 DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x9C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xBC ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH2 0x95 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA JUMP JUMPDEST NUMBER DUP2 GT ISZERO PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A207377617020686173206E6F742074696D6564206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420796574000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x74 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x88 DUP4 ADD MSTORE PUSH1 0x9C DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xBC SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2CC DUP2 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP8 SWAP2 PUSH32 0x3FBD469EC3A5CE074F975F76CE27E727BA21C99176917B97AE2E713695582A12 SWAP2 LOG2 PUSH2 0x314 DUP5 CALLER DUP8 PUSH2 0x6C5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A206C6F636B656420616D6F756E74206D757374206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x39E DUP4 CALLER ADDRESS DUP8 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x74 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x88 DUP4 ADD MSTORE PUSH1 0x9C DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xBC SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A20737761702065786973747320616C72656164790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP1 DUP8 SWAP1 PUSH32 0xA98EAA2BD8230D87A1A4C356F5C1D41CB85FF88131122EC8B1931CB9D31AE145 SWAP1 PUSH2 0x4D3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4F0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0x4FA DUP3 CALLVALUE PUSH2 0x99D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x518 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x532 SWAP2 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 DUP4 ADD DUP10 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE CALLER DUP2 SHL DUP3 AND PUSH1 0x74 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x88 DUP4 ADD MSTORE PUSH1 0x9C DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xBC SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH2 0x5DB DUP2 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP9 DUP2 MSTORE DUP4 SWAP2 PUSH32 0x5664142AF3DCFC3DC3DE45A43F75C746BD1D8C11170A5037FDF98BDB35775137 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x630 DUP6 CALLER DUP9 PUSH2 0x6C5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230537761703A207377617020686173206E6F20746F6B656E73206C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636B656420696E2074686520636F6E7472616374000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x791 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7BB JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x7BB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657220455243323020746F6B656E730000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x901 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x92B JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x92B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657246726F6D20455243323020746F6B656E7300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572204574686572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0xAB1 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0xAC1 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0xB04 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0xB14 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0xB24 DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xB59 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x5C JUMP 0xBA PUSH7 0x67E6098BBCB24D STATICCALL RETURNDATACOPY 0x2D 0xF7 PUSH27 0x740E38293C7D797D81DC59943554B964736F6C634300080A003300 ",
              "sourceMap": "154:8422:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4771:787;;;;;;;;;;-1:-1:-1;4771:787:0;;;;;:::i;:::-;;:::i;:::-;;270:33;;;;;;;;;;;;302:1;270:33;;;;;944:4:3;932:17;;;914:36;;902:2;887:18;270:33:0;;;;;;;;7764:432;;;;;;;;;;-1:-1:-1;7764:432:0;;;;;:::i;:::-;8015:173;;;;;;3543:19:3;;;3578:12;;;3571:28;;;-1:-1:-1;;3687:2:3;3683:15;;;3679:24;;3665:12;;;3658:46;3738:15;;;3734:24;;3720:12;;;3713:46;3794:15;;;3790:24;3775:13;;;3768:47;3831:13;;;3824:29;;;7979:7:0;;3869:13:3;;8015:173:0;;;;;;;;;;;;8005:184;;;;;;7998:191;;7764:432;;;;;;;;;;;;1848:25:3;;;1836:2;1821:18;7764:432:0;1702:177:3;6135:1091:0;;;;;;;;;;-1:-1:-1;6135:1091:0;;;;;:::i;:::-;;:::i;1663:425::-;;;;;;:::i;:::-;;:::i;2637:1430::-;;;;;;;;;;-1:-1:-1;2637:1430:0;;;;;:::i;:::-;;:::i;412:38::-;;;;;;;;;;-1:-1:-1;412:38:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2841:14:3;;2834:22;2816:41;;2804:2;2789:18;412:38:0;2676:187:3;4771:787:0;5132:12;5120:8;:24;;5112:74;;;;-1:-1:-1;;;5112:74:0;;3070:2:3;5112:74:0;;;3052:21:3;3109:2;3089:18;;;3082:30;3148:34;3128:18;;;3121:62;3219:7;3199:18;;;3192:35;3244:19;;5112:74:0;;;;;;;;;8015:173;;;;;;;3543:19:3;;;3578:12;;;3571:28;;;-1:-1:-1;;3687:2:3;3683:15;;;3679:24;;3665:12;;;3658:46;3738:15;;;3734:24;;3720:12;;;3713:46;5334:10:0;3794:15:3;;3790:24;3775:13;;;3768:47;3831:13;;;;3824:29;;;8015:173:0;;;;;;;;;;3869:13:3;;;;8015:173:0;;;8005:184;;;;;5387:23;5405:4;5387:17;:23::i;:::-;5427:5;:11;;;;;;;;;;;5420:18;;-1:-1:-1;;5420:18:0;;;5454:20;5461:12;;5454:20;;;5485:66;5518:12;5532:10;5544:6;5485:32;:66::i;:::-;4936:622;4771:787;;;;;:::o;6135:1091::-;6386:1;6377:6;:10;6369:64;;;;-1:-1:-1;;;6369:64:0;;4095:2:3;6369:64:0;;;4077:21:3;4134:2;4114:18;;;4107:30;4173:34;4153:18;;;4146:62;4244:11;4224:18;;;4217:39;4273:19;;6369:64:0;3893:405:3;6369:64:0;6546:85;6583:12;6597:10;6617:4;6624:6;6546:36;:85::i;:::-;8015:173;;;;;;;3543:19:3;;;3578:12;;;3571:28;;;-1:-1:-1;;3687:2:3;3683:15;;;3679:24;;3665:12;;;3658:46;3738:15;;;3734:24;;3720:12;;;3713:46;6818:10:0;3794:15:3;;3790:24;3775:13;;;3768:47;3831:13;;;;3824:29;;;8015:173:0;;;;;;;;;;3869:13:3;;;;8015:173:0;;;8005:184;;;;;-1:-1:-1;;6940:5:0;:11;;;;;;;;;;;6681:179;;-1:-1:-1;6940:11:0;;:20;6932:63;;;;-1:-1:-1;;;6932:63:0;;4505:2:3;6932:63:0;;;4487:21:3;4544:2;4524:18;;;4517:30;4583:32;4563:18;;;4556:60;4633:18;;6932:63:0;4303:354:3;6932:63:0;7072:5;:11;;;;;;;;;;;;:18;;-1:-1:-1;;7072:18:0;7086:4;7072:18;;;7141:78;7198:10;;7148:12;;7141:78;;;;7162:6;;7170:12;;7184;;7210:8;;4893:25:3;;;-1:-1:-1;;;;;5015:15:3;;;5010:2;4995:18;;4988:43;5067:15;;5062:2;5047:18;;5040:43;5114:2;5099:18;;5092:34;4880:3;4865:19;;4662:470;7141:78:0;;;;;;;;6299:927;6135:1091;;;;;:::o;1663:425::-;1869:64;1874:12;1888:6;1896:12;1910;1924:8;1869:4;:64::i;:::-;2028:53;2057:12;2071:9;2028:28;:53::i;:::-;1663:425;;;;;:::o;2637:1430::-;2929:20;2952:34;2976:8;2959:26;;;;;;5266:19:3;;5310:2;5301:12;;5137:182;2959:26:0;;;;-1:-1:-1;;2959:26:0;;;;;;;;;;2952:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8015:173;;;;;;;3543:19:3;;;3578:12;;;3571:28;;;-1:-1:-1;;3687:2:3;3683:15;;;3679:24;;3665:12;;;3658:46;3339:10:0;3738:15:3;;3734:24;;3720:12;;;3713:46;3794:15;;;3790:24;3775:13;;;3768:47;3831:13;;;;3824:29;;;8015:173:0;;;;;;;;;;3869:13:3;;;;8015:173:0;;;8005:184;;;;;3543:19:3;;-1:-1:-1;3486:23:0;3504:4;3486:17;:23::i;:::-;3841:5;:11;;;;;;;;;;;;3834:18;;-1:-1:-1;;3834:18:0;;;3902:29;;1848:25:3;;;3908:12:0;;3902:29;;1821:18:3;3902:29:0;;;;;;;3994:66;4027:12;4041:10;4053:6;3994:32;:66::i;:::-;2798:1269;;2637:1430;;;;;:::o;8419:155::-;8491:5;:11;;;;;;;;;;;;;:19;;:11;:19;8483:84;;;;-1:-1:-1;;;8483:84:0;;6146:2:3;8483:84:0;;;6128:21:3;6185:2;6165:18;;;6158:30;6224:34;6204:18;;;6197:62;6295:22;6275:18;;;6268:50;6335:19;;8483:84:0;5944:416:3;8483:84:0;8419:155;:::o;1296:412:2:-;1494:45;;;-1:-1:-1;;;;;6557:55:3;;;1494:45:2;;;6539:74:3;6629:18;;;;6622:34;;;1494:45:2;;;;;;;;;;6512:18:3;;;;1494:45:2;;;;;;;;;;;;;1483:57;;-1:-1:-1;;;;1483:10:2;;;;:57;;1494:45;1483:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:93;;;;1571:7;:57;;;;-1:-1:-1;1583:11:2;;:16;;:44;;;1614:4;1603:24;;;;;;;;;;;;:::i;:::-;1550:151;;;;-1:-1:-1;;;1550:151:2;;7151:2:3;1550:151:2;;;7133:21:3;7190:2;7170:18;;;7163:30;7229:34;7209:18;;;7202:62;7300:17;7280:18;;;7273:45;7335:19;;1550:151:2;6949:411:3;2396:452:2;2624:51;;;-1:-1:-1;;;;;7646:15:3;;;2624:51:2;;;7628:34:3;7698:15;;;7678:18;;;7671:43;7730:18;;;;7723:34;;;2624:51:2;;;;;;;;;;7540:18:3;;;;2624:51:2;;;;;;;;;;;;;2613:63;;-1:-1:-1;;;;2613:10:2;;;;:63;;2624:51;2613:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:99;;;;2707:7;:57;;;;-1:-1:-1;2719:11:2;;:16;;:44;;;2750:4;2739:24;;;;;;;;;;;;:::i;:::-;2686:155;;;;-1:-1:-1;;;2686:155:2;;7970:2:3;2686:155:2;;;7952:21:3;8009:2;7989:18;;;7982:30;8048:34;8028:18;;;8021:62;8119:21;8099:18;;;8092:49;8158:19;;2686:155:2;7768:415:3;648:197:2;724:12;742:2;-1:-1:-1;;;;;742:7:2;757:6;742:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:45;;;786:7;778:60;;;;-1:-1:-1;;;778:60:2;;8600:2:3;778:60:2;;;8582:21:3;8639:2;8619:18;;;8612:30;8678:34;8658:18;;;8651:62;8749:10;8729:18;;;8722:38;8777:19;;778:60:2;8398:404:3;778:60:2;713:132;648:197;;:::o;14:154:3:-;-1:-1:-1;;;;;93:5:3;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:594;268:6;276;284;292;300;353:3;341:9;332:7;328:23;324:33;321:53;;;370:1;367;360:12;321:53;406:9;393:23;383:33;;463:2;452:9;448:18;435:32;425:42;;517:2;506:9;502:18;489:32;530:31;555:5;530:31;:::i;:::-;580:5;-1:-1:-1;637:2:3;622:18;;609:32;650:33;609:32;650:33;:::i;:::-;173:594;;;;-1:-1:-1;173:594:3;;756:3;741:19;728:33;;173:594;-1:-1:-1;;173:594:3:o;961:736::-;1065:6;1073;1081;1089;1097;1105;1158:3;1146:9;1137:7;1133:23;1129:33;1126:53;;;1175:1;1172;1165:12;1126:53;1211:9;1198:23;1188:33;;1268:2;1257:9;1253:18;1240:32;1230:42;;1322:2;1311:9;1307:18;1294:32;1335:31;1360:5;1335:31;:::i;:::-;1385:5;-1:-1:-1;1442:2:3;1427:18;;1414:32;1455:33;1414:32;1455:33;:::i;:::-;1507:7;-1:-1:-1;1566:3:3;1551:19;;1538:33;1580;1538;1580;:::i;:::-;1632:7;1622:17;;;1686:3;1675:9;1671:19;1658:33;1648:43;;961:736;;;;;;;;:::o;2491:180::-;2550:6;2603:2;2591:9;2582:7;2578:23;2574:32;2571:52;;;2619:1;2616;2609:12;2571:52;-1:-1:-1;2642:23:3;;2491:180;-1:-1:-1;2491:180:3:o;5324:426::-;5453:3;5491:6;5485:13;5516:1;5526:129;5540:6;5537:1;5534:13;5526:129;;;5638:4;5622:14;;;5618:25;;5612:32;5599:11;;;5592:53;5555:12;5526:129;;;5673:6;5670:1;5667:13;5664:48;;;5708:1;5699:6;5694:3;5690:16;5683:27;5664:48;-1:-1:-1;5728:16:3;;;;;5324:426;-1:-1:-1;;5324:426:3:o;5755:184::-;5825:6;5878:2;5866:9;5857:7;5853:23;5849:32;5846:52;;;5894:1;5891;5884:12;5846:52;-1:-1:-1;5917:16:3;;5755:184;-1:-1:-1;5755:184:3:o;6667:277::-;6734:6;6787:2;6775:9;6766:7;6762:23;6758:32;6755:52;;;6803:1;6800;6793:12;6755:52;6835:9;6829:16;6888:5;6881:13;6874:21;6867:5;6864:32;6854:60;;6910:1;6907;6900:12;6854:60;6933:5;6667:277;-1:-1:-1;;;6667:277:3:o"
            },
            "methodIdentifiers": {
              "claim(bytes32,uint256,address,address,uint256)": "cd413efa",
              "hashValues(bytes32,uint256,address,address,address,uint256)": "7beb9d6d",
              "lock(bytes32,uint256,address,address,uint256)": "91644b2b",
              "lockPrepayMinerfee(bytes32,uint256,address,address,uint256)": "b8080ab8",
              "refund(bytes32,uint256,address,address,uint256)": "36504721",
              "swaps(bytes32)": "eb84e7f2",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"Lockup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"hashValues\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"lockPrepayMinerfee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"swaps\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(bytes32,uint256,address,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for the SHA256 hash of the preimage\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in the smallest denomination of the token\",\"preimage\":\"Preimage of the swap\",\"refundAddress\":\"Address that locked the tokens in the contract\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token locked for the swap\"}},\"hashValues(bytes32,uint256,address,address,address,uint256)\":{\"params\":{\"amount\":\"Amount the swap has locked in the smallest denomination of the token\",\"claimAddress\":\"Address that can claim the locked tokens\",\"preimageHash\":\"Preimage hash of the swap\",\"refundAddress\":\"Address that locked the tokens and can refund them\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token of the swap\"},\"returns\":{\"_0\":\"Value hash of the swap\"}},\"lock(bytes32,uint256,address,address,uint256)\":{\"details\":\"This function is \\\"public\\\" so that it can be called from the outside and \\\"lockPrepayMinerfee\\\" function\",\"params\":{\"amount\":\"Amount to be locked in the contract\",\"claimAddress\":\"Address that can claim the locked tokens\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token to be locked\"}},\"lockPrepayMinerfee(bytes32,uint256,address,address,uint256)\":{\"details\":\"Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether\",\"params\":{\"amount\":\"Amount that should be locked in the contract in the smallest denomination of the token\",\"claimAddress\":\"Address that can claim the locked tokens\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked tokens can be refunded\",\"tokenAddress\":\"Address of the token that should be locked in the contract\"}},\"refund(bytes32,uint256,address,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \\\"claim\\\" function\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in the smallest denomination of the token\",\"claimAddress\":\"Address that that was destined to claim the funds\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked Ether can be refunded\",\"tokenAddress\":\"Address of the token locked for the swap\"}}},\"stateVariables\":{\"swaps\":{\"details\":\"Mapping between value hashes of swaps and whether they have Ether locked in the contract\"},\"version\":{\"details\":\"Version of the contract used for compatibility checks\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Claims tokens locked in the contract\"},\"hashValues(bytes32,uint256,address,address,address,uint256)\":{\"notice\":\"Hashes all the values of a swap with Keccak256\"},\"lock(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Locks tokens in the contractThe refund address is the sender of the transaction\"},\"lockPrepayMinerfee(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Locks tokens for a swap in the contract and forwards a specified amount of Ether to the claim addressThe amount of Ether forwarded to the claim address is the amount sent in the transaction and the refund address is the sender of the transaction\"},\"refund(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Refunds tokens locked in the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Swap.sol\":\"ERC20Swap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ERC20Swap.sol\":{\"keccak256\":\"0x88dba3455109ec0d480b4a0ac2feb1100d30c5b218cd99cf85fdeedcd8f6874a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://af767f4830bb5e87092c16ab116b88b97d92ff70c5ddd0b943b9ea1a1475e6f4\",\"dweb:/ipfs/QmYWwAGuN7p6gewrxgU7NtAuSoJypKzM5nHUjBLDeXYR8t\"]},\"contracts/TransferHelper.sol\":{\"keccak256\":\"0x1a45dd194bd393cbecbbfb26791d13482691058d640a69940d43c8064ddee600\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://631d5e7ed530e0201d9e966516b421427bdf4e9bdc20d41fbd7e268f332a6ce4\",\"dweb:/ipfs/QmcSNTLC1xNqcut91yWjGXwZBCUt8pS3w5xirYFFDtQwqZ\"]}},\"version\":1}"
        }
      },
      "contracts/EtherSwap.sol": {
        "EtherSwap": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "preimage",
                  "type": "bytes32"
                }
              ],
              "name": "Claim",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "Lockup",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                }
              ],
              "name": "Refund",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimage",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "hashValues",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "lock",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "address payable",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prepayAmount",
                  "type": "uint256"
                }
              ],
              "name": "lockPrepayMinerfee",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "preimageHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                }
              ],
              "name": "refund",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "swaps",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506109e5806100206000396000f3fe6080604052600436106100705760003560e01c80636fa4ae601161004e5780636fa4ae60146100d65780638b2f8f82146100e9578063c3c37fbc14610173578063eb84e7f21461019357600080fd5b80630899146b1461007557806335cd4ccb1461008a57806354fd4d50146100aa575b600080fd5b6100886100833660046107fe565b6101d3565b005b34801561009657600080fd5b506100886100a5366004610836565b6101e4565b3480156100b657600080fd5b506100bf600281565b60405160ff90911681526020015b60405180910390f35b6100886100e4366004610875565b610309565b3480156100f557600080fd5b506101656101043660046108b2565b60408051602081018790529081018590526bffffffffffffffffffffffff19606085811b82168184015284901b1660748201526088810182905260009060a80160405160208183030381529060405280519060200120905095945050505050565b6040519081526020016100cd565b34801561017f57600080fd5b5061008861018e366004610836565b6103a3565b34801561019f57600080fd5b506101c36101ae366004610904565b60006020819052908152604090205460ff1681565b60405190151581526020016100cd565b6101df833484846104d0565b505050565b4381111561025f5760405162461bcd60e51b815260206004820152602560248201527f4574686572537761703a207377617020686173206e6f742074696d6564206f7560448201527f742079657400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040805160208082018790528183018690526bffffffffffffffffffffffff19606086811b82168185015233901b16607483015260888083018590528351808403909101815260a890920190925280519101206102bb8161067a565b600081815260208190526040808220805460ff191690555186917f3fbd469ec3a5ce074f975f76ce27e727ba21c99176917b97ae2e713695582a1291a26103023385610706565b5050505050565b80341161037e5760405162461bcd60e51b815260206004820152603d60248201527f4574686572537761703a2073656e7420616d6f756e74206d757374206265206760448201527f726561746572207468616e207468652070726570617920616d6f756e740000006064820152608401610256565b6103938461038c833461091d565b85856104d0565b61039d8382610706565b50505050565b60006002856040516020016103ba91815260200190565b60408051601f19818403018152908290526103d49161095b565b602060405180830381855afa1580156103f1573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104149190610996565b6040805160208082018490528183018890526bffffffffffffffffffffffff1933606090811b82168185015288901b16607483015260888083018790528351808403909101815260a890920190925280519101209091506104748161067a565b60008181526020818152604091829020805460ff19169055905187815283917f5664142af3dcfc3dc3de45a43f75c746bd1d8c11170a5037fdf98bdb35775137910160405180910390a26104c83386610706565b505050505050565b600083116105465760405162461bcd60e51b815260206004820152602960248201527f4574686572537761703a206c6f636b656420616d6f756e74206d757374206e6f60448201527f74206265207a65726f00000000000000000000000000000000000000000000006064820152608401610256565b6040805160208082018790528183018690526bffffffffffffffffffffffff19606086811b82168185015233901b16607483015260888083018590528351808403909101815260a8909201909252805191012060009060008181526020819052604090205490915060ff16156105fe5760405162461bcd60e51b815260206004820152601e60248201527f4574686572537761703a20737761702065786973747320616c726561647900006044820152606401610256565b60008181526020818152604091829020805460ff19166001179055815186815273ffffffffffffffffffffffffffffffffffffffff861691810191909152908101839052339086907f15b4b8206809535e547317cd5cedc86cff6e7d203551f93701786ddaf14fd9f99060600160405180910390a35050505050565b60008181526020819052604090205460ff1615156001146107035760405162461bcd60e51b815260206004820152603360248201527f4574686572537761703a207377617020686173206e6f204574686572206c6f6360448201527f6b656420696e2074686520636f6e7472616374000000000000000000000000006064820152608401610256565b50565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610760576040519150601f19603f3d011682016040523d82523d6000602084013e610765565b606091505b50509050806101df5760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f65722045746865720000000000000000000000000000000000000000000000006064820152608401610256565b73ffffffffffffffffffffffffffffffffffffffff8116811461070357600080fd5b60008060006060848603121561081357600080fd5b833592506020840135610825816107dc565b929592945050506040919091013590565b6000806000806080858703121561084c57600080fd5b84359350602085013592506040850135610865816107dc565b9396929550929360600135925050565b6000806000806080858703121561088b57600080fd5b84359350602085013561089d816107dc565b93969395505050506040820135916060013590565b600080600080600060a086880312156108ca57600080fd5b853594506020860135935060408601356108e3816107dc565b925060608601356108f3816107dc565b949793965091946080013592915050565b60006020828403121561091657600080fd5b5035919050565b600082821015610956577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b6000825160005b8181101561097c5760208186018101518583015201610962565b8181111561098b576000828501525b509190910192915050565b6000602082840312156109a857600080fd5b505191905056fea26469706673582212206c9f0eeffc34ad4dc3ffe4ccddb21d036f1e92552918ff1dd681e2e0ebf9da0564736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FA4AE60 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x6FA4AE60 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x8B2F8F82 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC3C37FBC EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x899146B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x35CD4CCB EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x875 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x88 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA8 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x1DF DUP4 CALLVALUE DUP5 DUP5 PUSH2 0x4D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST NUMBER DUP2 GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A207377617020686173206E6F742074696D6564206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420796574000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2BB DUP2 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP7 SWAP2 PUSH32 0x3FBD469EC3A5CE074F975F76CE27E727BA21C99176917B97AE2E713695582A12 SWAP2 LOG2 PUSH2 0x302 CALLER DUP6 PUSH2 0x706 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 CALLVALUE GT PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A2073656E7420616D6F756E74206D7573742062652067 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E207468652070726570617920616D6F756E74000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x393 DUP5 PUSH2 0x38C DUP4 CALLVALUE PUSH2 0x91D JUMP JUMPDEST DUP6 DUP6 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x39D DUP4 DUP3 PUSH2 0x706 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x3D4 SWAP2 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 DUP4 ADD DUP9 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH2 0x474 DUP2 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP8 DUP2 MSTORE DUP4 SWAP2 PUSH32 0x5664142AF3DCFC3DC3DE45A43F75C746BD1D8C11170A5037FDF98BDB35775137 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4C8 CALLER DUP7 PUSH2 0x706 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A206C6F636B656420616D6F756E74206D757374206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A20737761702065786973747320616C72656164790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x15B4B8206809535E547317CD5CEDC86CFF6E7D203551F93701786DDAF14FD9F9 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A207377617020686173206E6F204574686572206C6F63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656420696E2074686520636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x765 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572204574686572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x825 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x865 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x89D DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x8E3 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x8F3 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x956 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97C JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x962 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x9F0EEFFC34AD4DC3FFE4CCDDB2 SAR SUB PUSH16 0x1E92552918FF1DD681E2E0EBF9DA0564 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
              "sourceMap": "147:7917:1:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@checkSwapIsLocked_606": {
                  "entryPoint": 1658,
                  "id": 606,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@claim_451": {
                  "entryPoint": 931,
                  "id": 451,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@hashValues_535": {
                  "entryPoint": null,
                  "id": 535,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "@lockEther_590": {
                  "entryPoint": 1232,
                  "id": 590,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@lockPrepayMinerfee_393": {
                  "entryPoint": 777,
                  "id": 393,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@lock_355": {
                  "entryPoint": 467,
                  "id": 355,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@refund_507": {
                  "entryPoint": 484,
                  "id": 507,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@swaps_314": {
                  "entryPoint": null,
                  "id": 314,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferEther_632": {
                  "entryPoint": 1798,
                  "id": 632,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@version_309": {
                  "entryPoint": null,
                  "id": 309,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 2308,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32_fromMemory": {
                  "entryPoint": 2454,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_address_payablet_uint256t_uint256": {
                  "entryPoint": 2165,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_bytes32t_addresst_uint256": {
                  "entryPoint": 2046,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256": {
                  "entryPoint": 2226,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256": {
                  "entryPoint": 2102,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes32_t_uint256_t_address_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 2395,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_2db8331a5cee11314ddf88e305c14e3a8cbf16a75c667cf3825d2438733ecf36__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_84547762f3f25b437d8d99092aef7ec890f7017cf392e0283173c4ba5e9f1d28__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_970e82a7c16489f067a057e638d036a0d51ea621c5a5d4b9e69852865eae6c03__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_da6e11270aef037f77a6b6fc98641c00fdc766ae60d134d167bc1aece6252b58__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e7e26b7f1f09e2f872b50be970d7eba6618f8d72fdab297160a428161f69faac__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 2333,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 2012,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:7470:3",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:3",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:109:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "155:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "158:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:3"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:3"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "100:42:3",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:54:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:65:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "72:73:3"
                              },
                              "nodeType": "YulIf",
                              "src": "69:93:3"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48:5:3",
                            "type": ""
                          }
                        ],
                        "src": "14:154:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "277:279:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "323:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "332:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "335:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "325:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "325:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "298:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "307:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "294:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "294:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "319:2:3",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "290:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "290:32:3"
                              },
                              "nodeType": "YulIf",
                              "src": "287:52:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "348:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "371:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "348:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "390:45:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "420:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "431:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "416:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "416:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "403:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "403:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "394:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "469:5:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "444:31:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "444:31:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "484:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "494:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "484:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "508:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "535:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "546:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "531:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "531:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "518:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "518:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "508:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "227:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "238:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "250:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "258:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "266:6:3",
                            "type": ""
                          }
                        ],
                        "src": "173:383:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "682:331:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "729:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "738:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "741:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "731:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "731:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "731:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "703:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "712:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "699:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "699:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "724:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "695:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "695:33:3"
                              },
                              "nodeType": "YulIf",
                              "src": "692:53:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "754:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "764:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "764:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "754:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "796:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "823:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "834:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "819:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "806:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "806:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "796:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "847:45:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "877:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "888:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "873:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "873:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "860:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "860:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "851:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "926:5:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "901:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "901:31:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "901:31:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "941:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "951:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "941:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "965:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "992:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1003:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "988:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "988:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "975:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "975:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "965:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "624:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "635:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "647:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "655:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "663:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "671:6:3",
                            "type": ""
                          }
                        ],
                        "src": "561:452:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1115:87:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1125:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1137:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1148:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1133:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1133:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1125:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1167:9:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1182:6:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1190:4:3",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1178:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1178:17:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1160:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1160:36:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1160:36:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1084:9:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1095:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1106:4:3",
                            "type": ""
                          }
                        ],
                        "src": "1018:184:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1336:331:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1383:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1392:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1395:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1385:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1385:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1385:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1357:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1366:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1353:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1353:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1378:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1349:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1349:33:3"
                              },
                              "nodeType": "YulIf",
                              "src": "1346:53:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1408:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1431:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1418:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1418:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1408:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1450:45:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1480:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1491:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1476:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1476:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1463:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1463:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1454:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1529:5:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1504:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1504:31:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1504:31:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1544:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1554:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1544:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1568:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1595:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1606:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1591:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1591:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1578:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1578:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1568:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1619:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1646:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1657:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1642:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1642:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1629:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1629:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1619:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_address_payablet_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1278:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1289:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1301:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1309:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1317:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1325:6:3",
                            "type": ""
                          }
                        ],
                        "src": "1207:460:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1810:456:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1857:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1866:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1869:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1859:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1859:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1859:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1831:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1840:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1827:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1827:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1852:3:3",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1823:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1823:33:3"
                              },
                              "nodeType": "YulIf",
                              "src": "1820:53:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1882:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1905:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1892:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1892:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1882:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1924:42:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1951:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1962:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1947:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1947:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1934:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1934:32:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1924:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1975:45:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2005:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2016:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2001:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2001:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1988:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1988:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1979:5:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2054:5:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2029:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2029:31:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2029:31:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2069:15:3",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2079:5:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2069:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2093:47:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2125:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2136:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2121:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2121:18:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2108:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2108:32:3"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2097:7:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2174:7:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2149:24:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2149:33:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2149:33:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2191:17:3",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "2201:7:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2191:6:3"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2217:43:3",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2244:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2255:3:3",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2240:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2240:19:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2227:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2227:33:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2217:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1744:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1755:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1767:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1775:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1783:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1791:6:3",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1799:6:3",
                            "type": ""
                          }
                        ],
                        "src": "1672:594:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2372:76:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2382:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2394:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2405:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2390:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2390:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2382:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2424:9:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2435:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2417:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2417:25:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2417:25:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2341:9:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2352:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2363:4:3",
                            "type": ""
                          }
                        ],
                        "src": "2271:177:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2523:110:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2569:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2578:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2581:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2571:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2571:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2571:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2544:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2553:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2540:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2540:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2565:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2536:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2536:32:3"
                              },
                              "nodeType": "YulIf",
                              "src": "2533:52:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2594:33:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2617:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2604:12:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2604:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2594:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2489:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2500:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2512:6:3",
                            "type": ""
                          }
                        ],
                        "src": "2453:180:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2733:92:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2743:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2755:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2766:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2751:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2751:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2743:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2785:9:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2810:6:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2803:6:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2803:14:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2796:6:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2796:22:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2778:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2778:41:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2778:41:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2702:9:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2713:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2724:4:3",
                            "type": ""
                          }
                        ],
                        "src": "2638:187:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3004:227:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3021:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3032:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3014:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3014:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3014:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3055:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3066:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3051:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3051:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3071:2:3",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3044:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3044:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3044:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3094:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3105:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3090:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3090:18:3"
                                  },
                                  {
                                    "hexValue": "4574686572537761703a207377617020686173206e6f742074696d6564206f75",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3110:34:3",
                                    "type": "",
                                    "value": "EtherSwap: swap has not timed ou"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3083:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3083:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3083:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3165:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3176:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3161:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3161:18:3"
                                  },
                                  {
                                    "hexValue": "7420796574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3181:7:3",
                                    "type": "",
                                    "value": "t yet"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3154:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3154:35:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3154:35:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3198:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3210:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3221:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3206:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3206:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3198:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2db8331a5cee11314ddf88e305c14e3a8cbf16a75c667cf3825d2438733ecf36__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2981:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2995:4:3",
                            "type": ""
                          }
                        ],
                        "src": "2830:401:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3410:251:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3427:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3438:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3420:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3420:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3420:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3461:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3472:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3457:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3457:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3477:2:3",
                                    "type": "",
                                    "value": "61"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3450:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3450:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3450:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3500:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3511:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3496:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3496:18:3"
                                  },
                                  {
                                    "hexValue": "4574686572537761703a2073656e7420616d6f756e74206d7573742062652067",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3516:34:3",
                                    "type": "",
                                    "value": "EtherSwap: sent amount must be g"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3489:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3489:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3489:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3571:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3582:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3567:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3567:18:3"
                                  },
                                  {
                                    "hexValue": "726561746572207468616e207468652070726570617920616d6f756e74",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3587:31:3",
                                    "type": "",
                                    "value": "reater than the prepay amount"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3560:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3560:59:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3560:59:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3628:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3640:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3651:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3636:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3636:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3628:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_da6e11270aef037f77a6b6fc98641c00fdc766ae60d134d167bc1aece6252b58__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3387:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3401:4:3",
                            "type": ""
                          }
                        ],
                        "src": "3236:425:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3715:230:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3745:168:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3766:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3769:77:3",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3759:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3759:88:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3759:88:3"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3867:1:3",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3870:4:3",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3860:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3860:15:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3860:15:3"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3895:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3898:4:3",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3888:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3888:15:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3888:15:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3731:1:3"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3734:1:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3728:2:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3728:8:3"
                              },
                              "nodeType": "YulIf",
                              "src": "3725:188:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3922:17:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3934:1:3"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3937:1:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3930:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3930:9:3"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "3922:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "3697:1:3",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "3700:1:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "3706:4:3",
                            "type": ""
                          }
                        ],
                        "src": "3666:279:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4181:299:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4198:3:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4203:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4191:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4191:19:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4191:19:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4230:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4235:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4226:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4226:12:3"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4240:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4219:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4219:28:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4219:28:3"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4256:41:3",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4270:26:3",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4266:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4266:31:3"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4260:2:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4317:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4322:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4313:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4313:12:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4335:2:3",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value2",
                                            "nodeType": "YulIdentifier",
                                            "src": "4339:6:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "4331:3:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4331:15:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4348:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4327:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4327:24:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4306:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4306:46:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4306:46:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4372:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4377:2:3",
                                        "type": "",
                                        "value": "84"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4368:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4368:12:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4390:2:3",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "4394:6:3"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "4386:3:3"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4386:15:3"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4403:2:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4382:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4382:24:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4361:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4361:46:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4361:46:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4427:3:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4432:3:3",
                                        "type": "",
                                        "value": "104"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4423:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4423:13:3"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "4438:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4416:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4416:29:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4416:29:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4454:20:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4465:3:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4470:3:3",
                                    "type": "",
                                    "value": "136"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4461:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4461:13:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4454:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes32_t_uint256_t_address_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4125:3:3",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4130:6:3",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4138:6:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4146:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4154:6:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4162:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4173:3:3",
                            "type": ""
                          }
                        ],
                        "src": "3950:530:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4604:63:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4621:3:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4626:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4614:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4614:19:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4614:19:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4642:19:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4653:3:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4658:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4649:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4649:12:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4642:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4580:3:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4585:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4596:3:3",
                            "type": ""
                          }
                        ],
                        "src": "4485:182:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4809:289:3",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4819:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4839:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4833:5:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4833:13:3"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4823:6:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4855:10:3",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4864:1:3",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "4859:1:3",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4926:77:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "4951:3:3"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4956:1:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4947:3:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4947:11:3"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4974:6:3"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4982:1:3"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4970:3:3"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4970:14:3"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4986:4:3",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4966:3:3"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4966:25:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "4960:5:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4960:32:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4940:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4940:53:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4940:53:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4885:1:3"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4888:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4882:2:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4882:13:3"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "4896:21:3",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4898:17:3",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4907:1:3"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4910:4:3",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4903:3:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4903:12:3"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4898:1:3"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "4878:3:3",
                                "statements": []
                              },
                              "src": "4874:129:3"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5029:31:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "5042:3:3"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "5047:6:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5038:3:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5038:16:3"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5056:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5031:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5031:27:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5031:27:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5018:1:3"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5021:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5015:2:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5015:13:3"
                              },
                              "nodeType": "YulIf",
                              "src": "5012:48:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5069:23:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5080:3:3"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5085:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5076:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5076:16:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5069:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4785:3:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4790:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4801:3:3",
                            "type": ""
                          }
                        ],
                        "src": "4672:426:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5184:103:3",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5230:16:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5239:1:3",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5242:1:3",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5232:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5232:12:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5232:12:3"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5205:7:3"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5214:9:3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5201:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5201:23:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5226:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5197:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5197:32:3"
                              },
                              "nodeType": "YulIf",
                              "src": "5194:52:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5255:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5271:9:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5265:5:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5265:16:3"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5255:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5150:9:3",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5161:7:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5173:6:3",
                            "type": ""
                          }
                        ],
                        "src": "5103:184:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5466:231:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5483:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5494:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5476:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5476:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5476:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5517:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5528:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5513:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5513:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5533:2:3",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5506:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5506:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5506:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5556:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5567:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5552:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5552:18:3"
                                  },
                                  {
                                    "hexValue": "4574686572537761703a206c6f636b656420616d6f756e74206d757374206e6f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5572:34:3",
                                    "type": "",
                                    "value": "EtherSwap: locked amount must no"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5545:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5545:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5545:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5627:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5638:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5623:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5623:18:3"
                                  },
                                  {
                                    "hexValue": "74206265207a65726f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5643:11:3",
                                    "type": "",
                                    "value": "t be zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5616:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5616:39:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5616:39:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5664:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5676:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5687:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5672:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5672:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5664:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_970e82a7c16489f067a057e638d036a0d51ea621c5a5d4b9e69852865eae6c03__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5443:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5457:4:3",
                            "type": ""
                          }
                        ],
                        "src": "5292:405:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5876:180:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5893:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5904:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5886:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5886:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5886:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5927:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5938:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5923:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5923:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5943:2:3",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5916:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5916:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5916:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5966:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5977:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5962:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5962:18:3"
                                  },
                                  {
                                    "hexValue": "4574686572537761703a20737761702065786973747320616c7265616479",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5982:32:3",
                                    "type": "",
                                    "value": "EtherSwap: swap exists already"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5955:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5955:60:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5955:60:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6024:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6036:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6047:2:3",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6032:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6032:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6024:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_84547762f3f25b437d8d99092aef7ec890f7017cf392e0283173c4ba5e9f1d28__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5853:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5867:4:3",
                            "type": ""
                          }
                        ],
                        "src": "5702:354:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6218:211:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6228:26:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6240:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6251:2:3",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6236:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6236:18:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6228:4:3"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6270:9:3"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6281:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6263:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6263:25:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6263:25:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6308:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6319:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6304:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6304:18:3"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6328:6:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6336:42:3",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6324:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6324:55:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6297:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6297:83:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6297:83:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6400:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6411:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6396:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6396:18:3"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6416:6:3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6389:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6389:34:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6389:34:3"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6171:9:3",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6182:6:3",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6190:6:3",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6198:6:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6209:4:3",
                            "type": ""
                          }
                        ],
                        "src": "6061:368:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6608:241:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6625:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6636:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6618:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6618:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6618:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6659:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6670:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6655:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6655:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6675:2:3",
                                    "type": "",
                                    "value": "51"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6648:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6648:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6648:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6698:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6709:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6694:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6694:18:3"
                                  },
                                  {
                                    "hexValue": "4574686572537761703a207377617020686173206e6f204574686572206c6f63",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6714:34:3",
                                    "type": "",
                                    "value": "EtherSwap: swap has no Ether loc"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6687:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6687:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6687:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6769:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6780:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6765:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6765:18:3"
                                  },
                                  {
                                    "hexValue": "6b656420696e2074686520636f6e7472616374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6785:21:3",
                                    "type": "",
                                    "value": "ked in the contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6758:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6758:49:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6758:49:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6816:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6828:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6839:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6824:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6824:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6816:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e7e26b7f1f09e2f872b50be970d7eba6618f8d72fdab297160a428161f69faac__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6585:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6599:4:3",
                            "type": ""
                          }
                        ],
                        "src": "6434:415:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7045:14:3",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7047:10:3",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7054:3:3"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7047:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7029:3:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7037:3:3",
                            "type": ""
                          }
                        ],
                        "src": "6854:205:3"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7238:230:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7255:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7266:2:3",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7248:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7248:21:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7248:21:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7289:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7300:2:3",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7285:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7285:18:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7305:2:3",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7278:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7278:30:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7278:30:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7328:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7339:2:3",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7324:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7324:18:3"
                                  },
                                  {
                                    "hexValue": "5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7344:34:3",
                                    "type": "",
                                    "value": "TransferHelper: could not transf"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7317:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7317:62:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7317:62:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7399:9:3"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7410:2:3",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7395:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7395:18:3"
                                  },
                                  {
                                    "hexValue": "6572204574686572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7415:10:3",
                                    "type": "",
                                    "value": "er Ether"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7388:6:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7388:38:3"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7388:38:3"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7435:27:3",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7447:9:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7458:3:3",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7443:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7443:19:3"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7435:4:3"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7215:9:3",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7229:4:3",
                            "type": ""
                          }
                        ],
                        "src": "7064:404:3"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32t_address_payablet_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_2db8331a5cee11314ddf88e305c14e3a8cbf16a75c667cf3825d2438733ecf36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"EtherSwap: swap has not timed ou\")\n        mstore(add(headStart, 96), \"t yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da6e11270aef037f77a6b6fc98641c00fdc766ae60d134d167bc1aece6252b58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"EtherSwap: sent amount must be g\")\n        mstore(add(headStart, 96), \"reater than the prepay amount\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256_t_address_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 64), and(shl(96, value2), _1))\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        mstore(add(pos, 104), value4)\n        end := add(pos, 136)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_970e82a7c16489f067a057e638d036a0d51ea621c5a5d4b9e69852865eae6c03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"EtherSwap: locked amount must no\")\n        mstore(add(headStart, 96), \"t be zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_84547762f3f25b437d8d99092aef7ec890f7017cf392e0283173c4ba5e9f1d28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"EtherSwap: swap exists already\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e7e26b7f1f09e2f872b50be970d7eba6618f8d72fdab297160a428161f69faac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"EtherSwap: swap has no Ether loc\")\n        mstore(add(headStart, 96), \"ked in the contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"TransferHelper: could not transf\")\n        mstore(add(headStart, 96), \"er Ether\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 3,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100705760003560e01c80636fa4ae601161004e5780636fa4ae60146100d65780638b2f8f82146100e9578063c3c37fbc14610173578063eb84e7f21461019357600080fd5b80630899146b1461007557806335cd4ccb1461008a57806354fd4d50146100aa575b600080fd5b6100886100833660046107fe565b6101d3565b005b34801561009657600080fd5b506100886100a5366004610836565b6101e4565b3480156100b657600080fd5b506100bf600281565b60405160ff90911681526020015b60405180910390f35b6100886100e4366004610875565b610309565b3480156100f557600080fd5b506101656101043660046108b2565b60408051602081018790529081018590526bffffffffffffffffffffffff19606085811b82168184015284901b1660748201526088810182905260009060a80160405160208183030381529060405280519060200120905095945050505050565b6040519081526020016100cd565b34801561017f57600080fd5b5061008861018e366004610836565b6103a3565b34801561019f57600080fd5b506101c36101ae366004610904565b60006020819052908152604090205460ff1681565b60405190151581526020016100cd565b6101df833484846104d0565b505050565b4381111561025f5760405162461bcd60e51b815260206004820152602560248201527f4574686572537761703a207377617020686173206e6f742074696d6564206f7560448201527f742079657400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040805160208082018790528183018690526bffffffffffffffffffffffff19606086811b82168185015233901b16607483015260888083018590528351808403909101815260a890920190925280519101206102bb8161067a565b600081815260208190526040808220805460ff191690555186917f3fbd469ec3a5ce074f975f76ce27e727ba21c99176917b97ae2e713695582a1291a26103023385610706565b5050505050565b80341161037e5760405162461bcd60e51b815260206004820152603d60248201527f4574686572537761703a2073656e7420616d6f756e74206d757374206265206760448201527f726561746572207468616e207468652070726570617920616d6f756e740000006064820152608401610256565b6103938461038c833461091d565b85856104d0565b61039d8382610706565b50505050565b60006002856040516020016103ba91815260200190565b60408051601f19818403018152908290526103d49161095b565b602060405180830381855afa1580156103f1573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104149190610996565b6040805160208082018490528183018890526bffffffffffffffffffffffff1933606090811b82168185015288901b16607483015260888083018790528351808403909101815260a890920190925280519101209091506104748161067a565b60008181526020818152604091829020805460ff19169055905187815283917f5664142af3dcfc3dc3de45a43f75c746bd1d8c11170a5037fdf98bdb35775137910160405180910390a26104c83386610706565b505050505050565b600083116105465760405162461bcd60e51b815260206004820152602960248201527f4574686572537761703a206c6f636b656420616d6f756e74206d757374206e6f60448201527f74206265207a65726f00000000000000000000000000000000000000000000006064820152608401610256565b6040805160208082018790528183018690526bffffffffffffffffffffffff19606086811b82168185015233901b16607483015260888083018590528351808403909101815260a8909201909252805191012060009060008181526020819052604090205490915060ff16156105fe5760405162461bcd60e51b815260206004820152601e60248201527f4574686572537761703a20737761702065786973747320616c726561647900006044820152606401610256565b60008181526020818152604091829020805460ff19166001179055815186815273ffffffffffffffffffffffffffffffffffffffff861691810191909152908101839052339086907f15b4b8206809535e547317cd5cedc86cff6e7d203551f93701786ddaf14fd9f99060600160405180910390a35050505050565b60008181526020819052604090205460ff1615156001146107035760405162461bcd60e51b815260206004820152603360248201527f4574686572537761703a207377617020686173206e6f204574686572206c6f6360448201527f6b656420696e2074686520636f6e7472616374000000000000000000000000006064820152608401610256565b50565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610760576040519150601f19603f3d011682016040523d82523d6000602084013e610765565b606091505b50509050806101df5760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e736660448201527f65722045746865720000000000000000000000000000000000000000000000006064820152608401610256565b73ffffffffffffffffffffffffffffffffffffffff8116811461070357600080fd5b60008060006060848603121561081357600080fd5b833592506020840135610825816107dc565b929592945050506040919091013590565b6000806000806080858703121561084c57600080fd5b84359350602085013592506040850135610865816107dc565b9396929550929360600135925050565b6000806000806080858703121561088b57600080fd5b84359350602085013561089d816107dc565b93969395505050506040820135916060013590565b600080600080600060a086880312156108ca57600080fd5b853594506020860135935060408601356108e3816107dc565b925060608601356108f3816107dc565b949793965091946080013592915050565b60006020828403121561091657600080fd5b5035919050565b600082821015610956577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b6000825160005b8181101561097c5760208186018101518583015201610962565b8181111561098b576000828501525b509190910192915050565b6000602082840312156109a857600080fd5b505191905056fea26469706673582212206c9f0eeffc34ad4dc3ffe4ccddb21d036f1e92552918ff1dd681e2e0ebf9da0564736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FA4AE60 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x6FA4AE60 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x8B2F8F82 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC3C37FBC EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x899146B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x35CD4CCB EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x875 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x88 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA8 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x904 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x1DF DUP4 CALLVALUE DUP5 DUP5 PUSH2 0x4D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST NUMBER DUP2 GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A207377617020686173206E6F742074696D6564206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420796574000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2BB DUP2 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP7 SWAP2 PUSH32 0x3FBD469EC3A5CE074F975F76CE27E727BA21C99176917B97AE2E713695582A12 SWAP2 LOG2 PUSH2 0x302 CALLER DUP6 PUSH2 0x706 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 CALLVALUE GT PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A2073656E7420616D6F756E74206D7573742062652067 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E207468652070726570617920616D6F756E74000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x393 DUP5 PUSH2 0x38C DUP4 CALLVALUE PUSH2 0x91D JUMP JUMPDEST DUP6 DUP6 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x39D DUP4 DUP3 PUSH2 0x706 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x3D4 SWAP2 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 DUP4 ADD DUP9 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH2 0x474 DUP2 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP8 DUP2 MSTORE DUP4 SWAP2 PUSH32 0x5664142AF3DCFC3DC3DE45A43F75C746BD1D8C11170A5037FDF98BDB35775137 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4C8 CALLER DUP7 PUSH2 0x706 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A206C6F636B656420616D6F756E74206D757374206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE CALLER SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A20737761702065786973747320616C72656164790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x15B4B8206809535E547317CD5CEDC86CFF6E7D203551F93701786DDAF14FD9F9 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4574686572537761703A207377617020686173206E6F204574686572206C6F63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656420696E2074686520636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x765 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A20636F756C64206E6F74207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572204574686572000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x256 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x825 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x865 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x89D DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x8E3 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x8F3 DUP2 PUSH2 0x7DC JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x956 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97C JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x962 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x9F0EEFFC34AD4DC3FFE4CCDDB2 SAR SUB PUSH16 0x1E92552918FF1DD681E2E0EBF9DA0564 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
              "sourceMap": "147:7917:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:195;;;;;;:::i;:::-;;:::i;:::-;;4971:722;;;;;;;;;;-1:-1:-1;4971:722:1;;;;;:::i;:::-;;:::i;263:33::-;;;;;;;;;;;;295:1;263:33;;;;;1190:4:3;1178:17;;;1160:36;;1148:2;1133:18;263:33:1;;;;;;;;2074:623;;;;;;:::i;:::-;;:::i;6157:373::-;;;;;;;;;;-1:-1:-1;6157:373:1;;;;;:::i;:::-;6375:147;;;;;;4191:19:3;;;4226:12;;;4219:28;;;-1:-1:-1;;4335:2:3;4331:15;;;4327:24;;4313:12;;;4306:46;4386:15;;;4382:24;4368:12;;;4361:46;4423:13;;;4416:29;;;6339:7:1;;4461:13:3;;6375:147:1;;;;;;;;;;;;6365:158;;;;;;6358:165;;6157:373;;;;;;;;;;;2417:25:3;;;2405:2;2390:18;6157:373:1;2271:177:3;3139:1233:1;;;;;;;;;;-1:-1:-1;3139:1233:1;;;;;:::i;:::-;;:::i;405:38::-;;;;;;;;;;-1:-1:-1;405:38:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2803:14:3;;2796:22;2778:41;;2766:2;2751:18;405:38:1;2638:187:3;1178:195:1;1308:58;1318:12;1332:9;1343:12;1357:8;1308:9;:58::i;:::-;1178:195;;;:::o;4971:722::-;5302:12;5290:8;:24;;5282:74;;;;-1:-1:-1;;;5282:74:1;;3032:2:3;5282:74:1;;;3014:21:3;3071:2;3051:18;;;3044:30;3110:34;3090:18;;;3083:62;3181:7;3161:18;;;3154:35;3206:19;;5282:74:1;;;;;;;;;6375:147;;;;;;;4191:19:3;;;4226:12;;;4219:28;;;-1:-1:-1;;4335:2:3;4331:15;;;4327:24;;4313:12;;;4306:46;5478:10:1;4386:15:3;;4382:24;4368:12;;;4361:46;4423:13;;;;4416:29;;;6375:147:1;;;;;;;;;;4461:13:3;;;;6375:147:1;;;6365:158;;;;;5531:23;5549:4;5531:17;:23::i;:::-;5571:5;:11;;;;;;;;;;;5564:18;;-1:-1:-1;;5564:18:1;;;5598:20;5605:12;;5598:20;;;5629:57;5666:10;5679:6;5629:28;:57::i;:::-;5106:587;4971:722;;;;:::o;2074:623::-;2322:12;2310:9;:24;2302:98;;;;-1:-1:-1;;;2302:98:1;;3438:2:3;2302:98:1;;;3420:21:3;3477:2;3457:18;;;3450:30;3516:34;3496:18;;;3489:62;3587:31;3567:18;;;3560:59;3636:19;;2302:98:1;3236:425:3;2302:98:1;2492:73;2502:12;2516:24;2528:12;2516:9;:24;:::i;:::-;2542:12;2556:8;2492:9;:73::i;:::-;2634:56;2663:12;2677;2634:28;:56::i;:::-;2074:623;;;;:::o;3139:1233::-;3401:20;3424:34;3448:8;3431:26;;;;;;4614:19:3;;4658:2;4649:12;;4485:182;3431:26:1;;;;-1:-1:-1;;3431:26:1;;;;;;;;;;3424:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6375:147;;;;;;;4191:19:3;;;4226:12;;;4219:28;;;-1:-1:-1;;3785:10:1;4335:2:3;4331:15;;;4327:24;;4313:12;;;4306:46;4386:15;;;4382:24;4368:12;;;4361:46;4423:13;;;;4416:29;;;6375:147:1;;;;;;;;;;4461:13:3;;;;6375:147:1;;;6365:158;;;;;4191:19:3;;-1:-1:-1;3931:23:1;3949:4;3931:17;:23::i;:::-;4158:5;:11;;;;;;;;;;;;4151:18;;-1:-1:-1;;4151:18:1;;;4217:29;;2417:25:3;;;4223:12:1;;4217:29;;2390:18:3;4217:29:1;;;;;;;4308:57;4345:10;4358:6;4308:28;:57::i;:::-;3270:1102;;3139:1233;;;;:::o;6928:785::-;7111:1;7102:6;:10;7094:64;;;;-1:-1:-1;;;7094:64:1;;5494:2:3;7094:64:1;;;5476:21:3;5533:2;5513:18;;;5506:30;5572:34;5552:18;;;5545:62;5643:11;5623:18;;;5616:39;5672:19;;7094:64:1;5292:405:3;7094:64:1;6375:147;;;;;;;4191:19:3;;;4226:12;;;4219:28;;;-1:-1:-1;;4335:2:3;4331:15;;;4327:24;;4313:12;;;4306:46;7319:10:1;4386:15:3;;4382:24;4368:12;;;4361:46;4423:13;;;;4416:29;;;6375:147:1;;;;;;;;;;4461:13:3;;;;6375:147:1;;;6365:158;;;;;-1:-1:-1;;7441:5:1;:11;;;;;;;;;;;7208:153;;-1:-1:-1;7441:11:1;;:20;7433:63;;;;-1:-1:-1;;;7433:63:1;;5904:2:3;7433:63:1;;;5886:21:3;5943:2;5923:18;;;5916:30;5982:32;5962:18;;;5955:60;6032:18;;7433:63:1;5702:354:3;7433:63:1;7573:5;:11;;;;;;;;;;;;:18;;-1:-1:-1;;7573:18:1;7587:4;7573:18;;;7642:64;;6263:25:3;;;6336:42;6324:55;;6304:18;;;6297:83;;;;6396:18;;;6389:34;;;7685:10:1;;7649:12;;7642:64;;6251:2:3;6236:18;7642:64:1;;;;;;;7027:686;6928:785;;;;:::o;7908:154::-;7980:5;:11;;;;;;;;;;;;;:19;;:11;:19;7972:83;;;;-1:-1:-1;;;7972:83:1;;6636:2:3;7972:83:1;;;6618:21:3;6675:2;6655:18;;;6648:30;6714:34;6694:18;;;6687:62;6785:21;6765:18;;;6758:49;6824:19;;7972:83:1;6434:415:3;7972:83:1;7908:154;:::o;648:197:2:-;724:12;742:2;:7;;757:6;742:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:45;;;786:7;778:60;;;;-1:-1:-1;;;778:60:2;;7266:2:3;778:60:2;;;7248:21:3;7305:2;7285:18;;;7278:30;7344:34;7324:18;;;7317:62;7415:10;7395:18;;;7388:38;7443:19;;778:60:2;7064:404:3;14:154;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:383;250:6;258;266;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;371:9;358:23;348:33;;431:2;420:9;416:18;403:32;444:31;469:5;444:31;:::i;:::-;173:383;;494:5;;-1:-1:-1;;;546:2:3;531:18;;;;518:32;;173:383::o;561:452::-;647:6;655;663;671;724:3;712:9;703:7;699:23;695:33;692:53;;;741:1;738;731:12;692:53;777:9;764:23;754:33;;834:2;823:9;819:18;806:32;796:42;;888:2;877:9;873:18;860:32;901:31;926:5;901:31;:::i;:::-;561:452;;;;-1:-1:-1;951:5:3;;1003:2;988:18;975:32;;-1:-1:-1;;561:452:3:o;1207:460::-;1301:6;1309;1317;1325;1378:3;1366:9;1357:7;1353:23;1349:33;1346:53;;;1395:1;1392;1385:12;1346:53;1431:9;1418:23;1408:33;;1491:2;1480:9;1476:18;1463:32;1504:31;1529:5;1504:31;:::i;:::-;1207:460;;1554:5;;-1:-1:-1;;;;1606:2:3;1591:18;;1578:32;;1657:2;1642:18;1629:32;;1207:460::o;1672:594::-;1767:6;1775;1783;1791;1799;1852:3;1840:9;1831:7;1827:23;1823:33;1820:53;;;1869:1;1866;1859:12;1820:53;1905:9;1892:23;1882:33;;1962:2;1951:9;1947:18;1934:32;1924:42;;2016:2;2005:9;2001:18;1988:32;2029:31;2054:5;2029:31;:::i;:::-;2079:5;-1:-1:-1;2136:2:3;2121:18;;2108:32;2149:33;2108:32;2149:33;:::i;:::-;1672:594;;;;-1:-1:-1;1672:594:3;;2255:3;2240:19;2227:33;;1672:594;-1:-1:-1;;1672:594:3:o;2453:180::-;2512:6;2565:2;2553:9;2544:7;2540:23;2536:32;2533:52;;;2581:1;2578;2571:12;2533:52;-1:-1:-1;2604:23:3;;2453:180;-1:-1:-1;2453:180:3:o;3666:279::-;3706:4;3734:1;3731;3728:8;3725:188;;;3769:77;3766:1;3759:88;3870:4;3867:1;3860:15;3898:4;3895:1;3888:15;3725:188;-1:-1:-1;3930:9:3;;3666:279::o;4672:426::-;4801:3;4839:6;4833:13;4864:1;4874:129;4888:6;4885:1;4882:13;4874:129;;;4986:4;4970:14;;;4966:25;;4960:32;4947:11;;;4940:53;4903:12;4874:129;;;5021:6;5018:1;5015:13;5012:48;;;5056:1;5047:6;5042:3;5038:16;5031:27;5012:48;-1:-1:-1;5076:16:3;;;;;4672:426;-1:-1:-1;;4672:426:3:o;5103:184::-;5173:6;5226:2;5214:9;5205:7;5201:23;5197:32;5194:52;;;5242:1;5239;5232:12;5194:52;-1:-1:-1;5265:16:3;;5103:184;-1:-1:-1;5103:184:3:o"
            },
            "methodIdentifiers": {
              "claim(bytes32,uint256,address,uint256)": "c3c37fbc",
              "hashValues(bytes32,uint256,address,address,uint256)": "8b2f8f82",
              "lock(bytes32,address,uint256)": "0899146b",
              "lockPrepayMinerfee(bytes32,address,uint256,uint256)": "6fa4ae60",
              "refund(bytes32,uint256,address,uint256)": "35cd4ccb",
              "swaps(bytes32)": "eb84e7f2",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"Lockup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"hashValues\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prepayAmount\",\"type\":\"uint256\"}],\"name\":\"lockPrepayMinerfee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"swaps\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(bytes32,uint256,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for the SHA256 hash of the preimage\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in WEI\",\"preimage\":\"Preimage of the swap\",\"refundAddress\":\"Address that locked the Ether in the contract\",\"timelock\":\"Block height after which the locked Ether can be refunded\"}},\"hashValues(bytes32,uint256,address,address,uint256)\":{\"params\":{\"amount\":\"Amount the swap has locked in WEI\",\"claimAddress\":\"Address that can claim the locked Ether\",\"preimageHash\":\"Preimage hash of the swap\",\"refundAddress\":\"Address that locked the Ether and can refund them\",\"timelock\":\"Block height after which the locked Ether can be refunded\"},\"returns\":{\"_0\":\"Value hash of the swap\"}},\"lock(bytes32,address,uint256)\":{\"params\":{\"claimAddress\":\"Address that can claim the locked Ether\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked Ether can be refunded\"}},\"lockPrepayMinerfee(bytes32,address,uint256,uint256)\":{\"details\":\"Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether\",\"params\":{\"claimAddress\":\"Address that can claim the locked Ether\",\"preimageHash\":\"Preimage hash of the swap\",\"prepayAmount\":\"Amount that should be forwarded to the claim address\",\"timelock\":\"Block height after which the locked Ether can be refunded\"}},\"refund(bytes32,uint256,address,uint256)\":{\"details\":\"To query the arguments of this function, get the \\\"Lockup\\\" event logs for your refund address and the preimage hash if you have itFor further explanations and reasoning behind the statements in this function, check the \\\"claim\\\" function\",\"params\":{\"amount\":\"Amount locked in the contract for the swap in WEI\",\"claimAddress\":\"Address that that was destined to claim the funds\",\"preimageHash\":\"Preimage hash of the swap\",\"timelock\":\"Block height after which the locked Ether can be refunded\"}}},\"stateVariables\":{\"swaps\":{\"details\":\"Mapping between value hashes of swaps and whether they have Ether locked in the contract\"},\"version\":{\"details\":\"Version of the contract used for compatibility checks\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(bytes32,uint256,address,uint256)\":{\"notice\":\"Claims Ether locked in the contract\"},\"hashValues(bytes32,uint256,address,address,uint256)\":{\"notice\":\"Hashes all the values of a swap with Keccak256\"},\"lock(bytes32,address,uint256)\":{\"notice\":\"Locks Ether for a swap in the contractThe amount locked is the Ether sent in the transaction and the refund address is the sender of the transaction\"},\"lockPrepayMinerfee(bytes32,address,uint256,uint256)\":{\"notice\":\"Locks Ether for a swap in the contract and forwards a specified amount of Ether to the claim addressThe amount locked is the Ether sent in the transaction minus the prepay amount and the refund address is the sender of the transaction\"},\"refund(bytes32,uint256,address,uint256)\":{\"notice\":\"Refunds Ether locked in the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EtherSwap.sol\":\"EtherSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/EtherSwap.sol\":{\"keccak256\":\"0xf9eda87f7d63dea3452b317b076bef2d4e8a5c3e720ffe1248771ad9974b53aa\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://c792a259d3c854ef984a548e2f2dbfa17a41e6e854427542cd1ec924e9798032\",\"dweb:/ipfs/QmT9f1CsPPbMpsES8qehdD4dxMosJouLkLpMAH6pnBCWfC\"]},\"contracts/TransferHelper.sol\":{\"keccak256\":\"0x1a45dd194bd393cbecbbfb26791d13482691058d640a69940d43c8064ddee600\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://631d5e7ed530e0201d9e966516b421427bdf4e9bdc20d41fbd7e268f332a6ce4\",\"dweb:/ipfs/QmcSNTLC1xNqcut91yWjGXwZBCUt8pS3w5xirYFFDtQwqZ\"]}},\"version\":1}"
        }
      },
      "contracts/TransferHelper.sol": {
        "TransferHelper": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a9ec9e1651038340f13367aeefa84baf6d2ffebf232d6ea6aaa4682f4cbd02064736f6c634300080a0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP15 0xC9 0xE1 PUSH6 0x1038340F1336 PUSH27 0xEEFA84BAF6D2FFEBF232D6EA6AAA4682F4CBD02064736F6C634300 ADDMOD EXP STOP CALLER ",
              "sourceMap": "206:2644:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;206:2644:2;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a9ec9e1651038340f13367aeefa84baf6d2ffebf232d6ea6aaa4682f4cbd02064736f6c634300080a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP15 0xC9 0xE1 PUSH6 0x1038340F1336 PUSH27 0xEEFA84BAF6D2FFEBF232D6EA6AAA4682F4CBD02064736F6C634300 ADDMOD EXP STOP CALLER ",
              "sourceMap": "206:2644:2:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/TransferHelper.sol\":{\"keccak256\":\"0x1a45dd194bd393cbecbbfb26791d13482691058d640a69940d43c8064ddee600\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://631d5e7ed530e0201d9e966516b421427bdf4e9bdc20d41fbd7e268f332a6ce4\",\"dweb:/ipfs/QmcSNTLC1xNqcut91yWjGXwZBCUt8pS3w5xirYFFDtQwqZ\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/ERC20Swap.sol": {
        "ast": {
          "absolutePath": "contracts/ERC20Swap.sol",
          "exportedSymbols": {
            "ERC20Swap": [
              302
            ],
            "TransferHelper": [
              724
            ]
          },
          "id": 303,
          "license": "AGPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "47:23:0"
            },
            {
              "absolutePath": "contracts/TransferHelper.sol",
              "file": "./TransferHelper.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 303,
              "sourceUnit": 725,
              "src": "72:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ERC20Swap",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 302,
              "linearizedBaseContracts": [
                302
              ],
              "name": "ERC20Swap",
              "nameLocation": "163:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "203:62:0",
                    "text": "@dev Version of the contract used for compatibility checks"
                  },
                  "functionSelector": "54fd4d50",
                  "id": 6,
                  "mutability": "constant",
                  "name": "version",
                  "nameLocation": "292:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "270:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 5,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "302:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 7,
                    "nodeType": "StructuredDocumentation",
                    "src": "310:97:0",
                    "text": "@dev Mapping between value hashes of swaps and whether they have Ether locked in the contract"
                  },
                  "functionSelector": "eb84e7f2",
                  "id": 11,
                  "mutability": "mutable",
                  "name": "swaps",
                  "nameLocation": "445:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "412:38:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "typeName": {
                    "id": 10,
                    "keyType": {
                      "id": 8,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "412:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                      "typeString": "mapping(bytes32 => bool)"
                    },
                    "valueType": {
                      "id": 9,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "432:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 25,
                  "name": "Lockup",
                  "nameLocation": "478:6:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "510:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "494:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "494:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 15,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "540:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "532:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "532:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 17,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "564:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "556:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "556:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 19,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "594:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "586:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 21,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "refundAddress",
                        "nameLocation": "632:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "616:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 23,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "660:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "655:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "655:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "484:190:0"
                  },
                  "src": "472:203:0"
                },
                {
                  "anonymous": false,
                  "id": 31,
                  "name": "Claim",
                  "nameLocation": "687:5:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "709:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "693:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 29,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "preimage",
                        "nameLocation": "731:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 31,
                        "src": "723:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "723:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:48:0"
                  },
                  "src": "681:60:0"
                },
                {
                  "anonymous": false,
                  "id": 35,
                  "name": "Refund",
                  "nameLocation": "752:6:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "775:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "759:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:30:0"
                  },
                  "src": "746:43:0"
                },
                {
                  "body": {
                    "id": 65,
                    "nodeType": "Block",
                    "src": "1859:229:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "1874:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 51,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "1888:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 52,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1896:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1910:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 54,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "1924:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 49,
                            "name": "lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "1869:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,address,address,uint256)"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1869:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56,
                        "nodeType": "ExpressionStatement",
                        "src": "1869:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "2057:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 61,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2071:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2071:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 57,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2028:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$724_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferEther",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 632,
                            "src": "2028:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2028:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 64,
                        "nodeType": "ExpressionStatement",
                        "src": "2028:53:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "840:818:0",
                    "text": "Locks tokens for a swap in the contract and forwards a specified amount of Ether to the claim address\n @notice The amount of Ether forwarded to the claim address is the amount sent in the transaction and the refund address is the sender of the transaction\n @dev Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether\n @param preimageHash Preimage hash of the swap\n @param amount Amount that should be locked in the contract in the smallest denomination of the token\n @param tokenAddress Address of the token that should be locked in the contract\n @param claimAddress Address that can claim the locked tokens\n @param timelock Block height after which the locked tokens can be refunded"
                  },
                  "functionSelector": "b8080ab8",
                  "id": 66,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lockPrepayMinerfee",
                  "nameLocation": "1672:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "1708:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1700:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1700:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1738:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1730:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1730:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "1762:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1754:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "1800:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1784:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1784:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "1827:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1822:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1822:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1690:151:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1859:0:0"
                  },
                  "scope": 302,
                  "src": "1663:425:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 124,
                    "nodeType": "Block",
                    "src": "2798:1269:0",
                    "statements": [
                      {
                        "assignments": [
                          81
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 81,
                            "mutability": "mutable",
                            "name": "preimageHash",
                            "nameLocation": "2937:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 124,
                            "src": "2929:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 80,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2929:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 88,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 85,
                                  "name": "preimage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69,
                                  "src": "2976:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 83,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2959:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 84,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2959:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2959:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 82,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -22,
                            "src": "2952:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2952:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2929:57:0"
                      },
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "3236:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 124,
                            "src": "3228:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3228:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 92,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "3267:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 93,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "3293:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 94,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "3313:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 95,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3339:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3339:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 97,
                              "name": "refundAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "3363:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 98,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "3390:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 91,
                            "name": "hashValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "3243:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256,address,address,address,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3243:165:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3228:180:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "3504:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 101,
                            "name": "checkSwapIsLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "3486:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3486:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "3486:23:0"
                      },
                      {
                        "expression": {
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "3834:18:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 105,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "3841:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 107,
                            "indexExpression": {
                              "id": 106,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "3847:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3841:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "ExpressionStatement",
                        "src": "3834:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 111,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "3908:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 112,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "3922:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 110,
                            "name": "Claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "3902:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3902:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 114,
                        "nodeType": "EmitStatement",
                        "src": "3897:34:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 118,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "4027:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 119,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4041:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4041:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 121,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "4053:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 115,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "3994:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$724_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 676,
                            "src": "3994:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3994:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "3994:66:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 67,
                    "nodeType": "StructuredDocumentation",
                    "src": "2094:538:0",
                    "text": "Claims tokens locked in the contract\n @dev To query the arguments of this function, get the \"Lockup\" event logs for the SHA256 hash of the preimage\n @param preimage Preimage of the swap\n @param amount Amount locked in the contract for the swap in the smallest denomination of the token\n @param tokenAddress Address of the token locked for the swap\n @param refundAddress Address that locked the tokens in the contract\n @param timelock Block height after which the locked tokens can be refunded"
                  },
                  "functionSelector": "cd413efa",
                  "id": 125,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claim",
                  "nameLocation": "2646:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "preimage",
                        "nameLocation": "2669:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "2661:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2692:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "2687:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2687:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "2716:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "2708:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "refundAddress",
                        "nameLocation": "2746:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "2738:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "2774:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "2769:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2769:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2651:137:0"
                  },
                  "returnParameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2798:0:0"
                  },
                  "scope": 302,
                  "src": "2637:1430:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "4936:622:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 140,
                                "name": "timelock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 136,
                                "src": "5120:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 141,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5132:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "5132:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5120:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230537761703a207377617020686173206e6f742074696d6564206f757420796574",
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5146:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_017ef59273f738ec3dc7aa0d17f5d5cea19adfa230f737fd11fca22a8d9a9aaa",
                                "typeString": "literal_string \"ERC20Swap: swap has not timed out yet\""
                              },
                              "value": "ERC20Swap: swap has not timed out yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_017ef59273f738ec3dc7aa0d17f5d5cea19adfa230f737fd11fca22a8d9a9aaa",
                                "typeString": "literal_string \"ERC20Swap: swap has not timed out yet\""
                              }
                            ],
                            "id": 139,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5112:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5112:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "5112:74:0"
                      },
                      {
                        "assignments": [
                          148
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 148,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "5205:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 181,
                            "src": "5197:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 147,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5197:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 158,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 150,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 128,
                              "src": "5236:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 151,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "5262:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 152,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "5282:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 153,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "5308:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 154,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5334:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5334:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 156,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "5358:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 149,
                            "name": "hashValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "5212:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256,address,address,address,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5212:164:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5197:179:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "5405:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 159,
                            "name": "checkSwapIsLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "5387:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5387:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "5387:23:0"
                      },
                      {
                        "expression": {
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5420:18:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 163,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "5427:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 165,
                            "indexExpression": {
                              "id": 164,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "5433:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5427:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 167,
                        "nodeType": "ExpressionStatement",
                        "src": "5420:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 169,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 128,
                              "src": "5461:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 168,
                            "name": "Refund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "5454:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5454:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 171,
                        "nodeType": "EmitStatement",
                        "src": "5449:25:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 175,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "5518:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 176,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5532:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5532:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 178,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "5544:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 172,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "5485:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$724_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 676,
                            "src": "5485:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5485:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "5485:66:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 126,
                    "nodeType": "StructuredDocumentation",
                    "src": "4073:693:0",
                    "text": "Refunds tokens locked in the contract\n @dev To query the arguments of this function, get the \"Lockup\" event logs for your refund address and the preimage hash if you have it\n @dev For further explanations and reasoning behind the statements in this function, check the \"claim\" function\n @param preimageHash Preimage hash of the swap\n @param amount Amount locked in the contract for the swap in the smallest denomination of the token\n @param tokenAddress Address of the token locked for the swap\n @param claimAddress Address that that was destined to claim the funds\n @param timelock Block height after which the locked Ether can be refunded"
                  },
                  "functionSelector": "36504721",
                  "id": 182,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refund",
                  "nameLocation": "4780:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "4804:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "4796:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4796:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 130,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4831:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "4826:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4826:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "4855:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "4847:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4847:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "4885:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "4877:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4877:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "4912:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "4907:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4907:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4786:140:0"
                  },
                  "returnParameters": {
                    "id": 138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4936:0:0"
                  },
                  "scope": 302,
                  "src": "4771:787:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "6299:927:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 197,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "6377:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6386:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6377:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230537761703a206c6f636b656420616d6f756e74206d757374206e6f74206265207a65726f",
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6389:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_57b2db51b3a8aa47538f98b4f3a98580669ecce4e20eac0e2c83ed4645a5e030",
                                "typeString": "literal_string \"ERC20Swap: locked amount must not be zero\""
                              },
                              "value": "ERC20Swap: locked amount must not be zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_57b2db51b3a8aa47538f98b4f3a98580669ecce4e20eac0e2c83ed4645a5e030",
                                "typeString": "literal_string \"ERC20Swap: locked amount must not be zero\""
                              }
                            ],
                            "id": 196,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6369:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6369:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "6369:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 206,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "6583:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 207,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6597:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6597:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 211,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6617:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Swap_$302",
                                    "typeString": "contract ERC20Swap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Swap_$302",
                                    "typeString": "contract ERC20Swap"
                                  }
                                ],
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6609:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 209,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6609:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6609:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 213,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "6624:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 203,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "6546:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$724_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferTokenFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 723,
                            "src": "6546:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6546:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "6546:85:0"
                      },
                      {
                        "assignments": [
                          217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 217,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "6689:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "6681:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6681:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 227,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 219,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "6720:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 220,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "6746:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 221,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "6766:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 222,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "6792:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 223,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6818:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6818:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 225,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "6842:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 218,
                            "name": "hashValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "6696:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256,address,address,address,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6696:164:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6681:179:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 229,
                                  "name": "swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "6940:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 231,
                                "indexExpression": {
                                  "id": 230,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 217,
                                  "src": "6946:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6940:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6955:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "6940:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230537761703a20737761702065786973747320616c7265616479",
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6962:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1c419ac3444d43f0996a1f6a9e1bf15f20a3b94ca4b40663e6c230ef14a7c97a",
                                "typeString": "literal_string \"ERC20Swap: swap exists already\""
                              },
                              "value": "ERC20Swap: swap exists already"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1c419ac3444d43f0996a1f6a9e1bf15f20a3b94ca4b40663e6c230ef14a7c97a",
                                "typeString": "literal_string \"ERC20Swap: swap exists already\""
                              }
                            ],
                            "id": 228,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6932:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6932:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "6932:63:0"
                      },
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 237,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "7072:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 239,
                            "indexExpression": {
                              "id": 238,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "7078:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7072:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7086:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7072:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "7072:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 244,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "7148:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 245,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "7162:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 246,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "7170:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 247,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "7184:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 248,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7198:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7198:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 250,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "7210:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 243,
                            "name": "Lockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "7141:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,address,address,address,uint256)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7141:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "EmitStatement",
                        "src": "7136:83:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "5589:541:0",
                    "text": "Locks tokens in the contract\n @notice The refund address is the sender of the transaction\n @dev This function is \"public\" so that it can be called from the outside and \"lockPrepayMinerfee\" function\n @param preimageHash Preimage hash of the swap\n @param amount Amount to be locked in the contract\n @param tokenAddress Address of the token to be locked\n @param claimAddress Address that can claim the locked tokens\n @param timelock Block height after which the locked tokens can be refunded"
                  },
                  "functionSelector": "91644b2b",
                  "id": 254,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lock",
                  "nameLocation": "6144:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "6166:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "6158:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6158:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6196:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "6188:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6188:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "6220:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "6212:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6212:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "6250:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "6242:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6242:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "6277:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "6272:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6272:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6148:143:0"
                  },
                  "returnParameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6299:0:0"
                  },
                  "scope": 302,
                  "src": "6135:1091:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 284,
                    "nodeType": "Block",
                    "src": "7988:208:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 275,
                                  "name": "preimageHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 257,
                                  "src": "8045:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 276,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "8071:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 277,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "8091:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 278,
                                  "name": "claimAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 263,
                                  "src": "8117:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 279,
                                  "name": "refundAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 265,
                                  "src": "8143:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 280,
                                  "name": "timelock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 267,
                                  "src": "8170:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 273,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8015:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8015:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8015:173:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 272,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8005:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8005:184:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 271,
                        "id": 283,
                        "nodeType": "Return",
                        "src": "7998:191:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "7232:527:0",
                    "text": "Hashes all the values of a swap with Keccak256\n @param preimageHash Preimage hash of the swap\n @param amount Amount the swap has locked in the smallest denomination of the token\n @param tokenAddress Address of the token of the swap\n @param claimAddress Address that can claim the locked tokens\n @param refundAddress Address that locked the tokens and can refund them\n @param timelock Block height after which the locked tokens can be refunded\n @return Value hash of the swap"
                  },
                  "functionSelector": "7beb9d6d",
                  "id": 285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashValues",
                  "nameLocation": "7773:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "7801:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "7793:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7793:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7831:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "7823:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7823:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "7855:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "7847:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7847:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "7885:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "7877:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7877:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "refundAddress",
                        "nameLocation": "7915:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "7907:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7907:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "7943:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "7938:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7938:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7783:174:0"
                  },
                  "returnParameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "7979:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7979:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7978:9:0"
                  },
                  "scope": 302,
                  "src": "7764:432:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "8473:101:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 292,
                                  "name": "swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "8491:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 294,
                                "indexExpression": {
                                  "id": 293,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 288,
                                  "src": "8497:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8491:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8506:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "8491:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230537761703a207377617020686173206e6f20746f6b656e73206c6f636b656420696e2074686520636f6e7472616374",
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8512:54:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9864c8ca1b13e0816f616ca8a4eeec0f07f19962796a417be3c6a3028de15bf6",
                                "typeString": "literal_string \"ERC20Swap: swap has no tokens locked in the contract\""
                              },
                              "value": "ERC20Swap: swap has no tokens locked in the contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9864c8ca1b13e0816f616ca8a4eeec0f07f19962796a417be3c6a3028de15bf6",
                                "typeString": "literal_string \"ERC20Swap: swap has no tokens locked in the contract\""
                              }
                            ],
                            "id": 291,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8483:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8483:84:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "8483:84:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 286,
                    "nodeType": "StructuredDocumentation",
                    "src": "8228:186:0",
                    "text": "Checks whether a swap has tokens locked in the contract\n @dev This function reverts if the swap has no tokens locked in the contract\n @param hash Value hash of the swap"
                  },
                  "id": 301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkSwapIsLocked",
                  "nameLocation": "8428:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "8454:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "8446:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8446:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8445:14:0"
                  },
                  "returnParameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8473:0:0"
                  },
                  "scope": 302,
                  "src": "8419:155:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 303,
              "src": "154:8422:0",
              "usedErrors": []
            }
          ],
          "src": "47:8530:0"
        },
        "id": 0
      },
      "contracts/EtherSwap.sol": {
        "ast": {
          "absolutePath": "contracts/EtherSwap.sol",
          "exportedSymbols": {
            "EtherSwap": [
              607
            ],
            "TransferHelper": [
              724
            ]
          },
          "id": 608,
          "license": "AGPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 304,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "47:23:1"
            },
            {
              "absolutePath": "contracts/TransferHelper.sol",
              "file": "./TransferHelper.sol",
              "id": 305,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 608,
              "sourceUnit": 725,
              "src": "72:30:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "EtherSwap",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 607,
              "linearizedBaseContracts": [
                607
              ],
              "name": "EtherSwap",
              "nameLocation": "156:9:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "196:62:1",
                    "text": "@dev Version of the contract used for compatibility checks"
                  },
                  "functionSelector": "54fd4d50",
                  "id": 309,
                  "mutability": "constant",
                  "name": "version",
                  "nameLocation": "285:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "263:33:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "295:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 310,
                    "nodeType": "StructuredDocumentation",
                    "src": "303:97:1",
                    "text": "@dev Mapping between value hashes of swaps and whether they have Ether locked in the contract"
                  },
                  "functionSelector": "eb84e7f2",
                  "id": 314,
                  "mutability": "mutable",
                  "name": "swaps",
                  "nameLocation": "438:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "405:38:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "typeName": {
                    "id": 313,
                    "keyType": {
                      "id": 311,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "414:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "405:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                      "typeString": "mapping(bytes32 => bool)"
                    },
                    "valueType": {
                      "id": 312,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "425:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 326,
                  "name": "Lockup",
                  "nameLocation": "471:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "503:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "487:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "487:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 318,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "530:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "525:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "525:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "554:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "546:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "refundAddress",
                        "nameLocation": "592:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "576:29:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "576:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "620:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "615:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "477:157:1"
                  },
                  "src": "465:170:1"
                },
                {
                  "anonymous": false,
                  "id": 332,
                  "name": "Claim",
                  "nameLocation": "647:5:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 328,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "669:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "653:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "653:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 330,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "preimage",
                        "nameLocation": "691:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "683:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "652:48:1"
                  },
                  "src": "641:60:1"
                },
                {
                  "anonymous": false,
                  "id": 336,
                  "name": "Refund",
                  "nameLocation": "712:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 334,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "735:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "719:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "719:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "718:30:1"
                  },
                  "src": "706:43:1"
                },
                {
                  "body": {
                    "id": 354,
                    "nodeType": "Block",
                    "src": "1298:75:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 347,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "1318:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 348,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1332:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1332:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 350,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "1343:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 351,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "1357:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 346,
                            "name": "lockEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "1308:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,address,uint256)"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1308:58:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 353,
                        "nodeType": "ExpressionStatement",
                        "src": "1308:58:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:373:1",
                    "text": "Locks Ether for a swap in the contract\n @notice The amount locked is the Ether sent in the transaction and the refund address is the sender of the transaction\n @param preimageHash Preimage hash of the swap\n @param claimAddress Address that can claim the locked Ether\n @param timelock Block height after which the locked Ether can be refunded"
                  },
                  "functionSelector": "0899146b",
                  "id": 355,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lock",
                  "nameLocation": "1187:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "1209:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "1201:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "1239:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "1231:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1231:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "1266:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "1261:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1261:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1191:89:1"
                  },
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1298:0:1"
                  },
                  "scope": 607,
                  "src": "1178:195:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 392,
                    "nodeType": "Block",
                    "src": "2243:454:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 368,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2310:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2310:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 370,
                                "name": "prepayAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 364,
                                "src": "2322:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2310:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4574686572537761703a2073656e7420616d6f756e74206d7573742062652067726561746572207468616e207468652070726570617920616d6f756e74",
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2336:63:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_da6e11270aef037f77a6b6fc98641c00fdc766ae60d134d167bc1aece6252b58",
                                "typeString": "literal_string \"EtherSwap: sent amount must be greater than the prepay amount\""
                              },
                              "value": "EtherSwap: sent amount must be greater than the prepay amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_da6e11270aef037f77a6b6fc98641c00fdc766ae60d134d167bc1aece6252b58",
                                "typeString": "literal_string \"EtherSwap: sent amount must be greater than the prepay amount\""
                              }
                            ],
                            "id": 367,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2302:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 374,
                        "nodeType": "ExpressionStatement",
                        "src": "2302:98:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 376,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "2502:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 377,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2516:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2516:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 379,
                                "name": "prepayAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 364,
                                "src": "2528:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2516:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 381,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "2542:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 382,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "2556:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 375,
                            "name": "lockEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "2492:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,address,uint256)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2492:73:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "2492:73:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 388,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "2663:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 389,
                              "name": "prepayAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "2677:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 385,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "2634:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$724_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferEther",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 632,
                            "src": "2634:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2634:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 391,
                        "nodeType": "ExpressionStatement",
                        "src": "2634:56:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 356,
                    "nodeType": "StructuredDocumentation",
                    "src": "1379:690:1",
                    "text": "Locks Ether for a swap in the contract and forwards a specified amount of Ether to the claim address\n @notice The amount locked is the Ether sent in the transaction minus the prepay amount and the refund address is the sender of the transaction\n @dev Make sure to set a reasonable gas limit for calling this function, else a malicious contract at the claim address could drain your Ether\n @param preimageHash Preimage hash of the swap\n @param claimAddress Address that can claim the locked Ether\n @param timelock Block height after which the locked Ether can be refunded\n @param prepayAmount Amount that should be forwarded to the claim address"
                  },
                  "functionSelector": "6fa4ae60",
                  "id": 393,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lockPrepayMinerfee",
                  "nameLocation": "2083:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "2119:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "2111:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2111:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "2157:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "2141:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2141:15:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "2184:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "2179:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2179:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "prepayAmount",
                        "nameLocation": "2207:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "2202:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2202:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2101:124:1"
                  },
                  "returnParameters": {
                    "id": 366,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2243:0:1"
                  },
                  "scope": 607,
                  "src": "2074:623:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 450,
                    "nodeType": "Block",
                    "src": "3270:1102:1",
                    "statements": [
                      {
                        "assignments": [
                          406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 406,
                            "mutability": "mutable",
                            "name": "preimageHash",
                            "nameLocation": "3409:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 450,
                            "src": "3401:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 405,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3401:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 413,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 410,
                                  "name": "preimage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 396,
                                  "src": "3448:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 408,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3431:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3431:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3431:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 407,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -22,
                            "src": "3424:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3424:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3401:57:1"
                      },
                      {
                        "assignments": [
                          415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 415,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "3708:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 450,
                            "src": "3700:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3700:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 424,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 417,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "3739:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 418,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "3765:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 419,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3785:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3785:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 421,
                              "name": "refundAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "3809:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 422,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "3836:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 416,
                            "name": "hashValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 535,
                            "src": "3715:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256,address,address,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3715:139:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3700:154:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 426,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "3949:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 425,
                            "name": "checkSwapIsLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "3931:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3931:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "3931:23:1"
                      },
                      {
                        "expression": {
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4151:18:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 429,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "4158:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 431,
                            "indexExpression": {
                              "id": 430,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "4164:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4158:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "4151:18:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 435,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "4223:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 436,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "4237:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 434,
                            "name": "Claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "4217:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4217:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 438,
                        "nodeType": "EmitStatement",
                        "src": "4212:34:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 444,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4345:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4345:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4337:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 442,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4337:8:1",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4337:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 447,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "4358:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 439,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "4308:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$724_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferEther",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 632,
                            "src": "4308:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4308:57:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "4308:57:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 394,
                    "nodeType": "StructuredDocumentation",
                    "src": "2703:431:1",
                    "text": "Claims Ether locked in the contract\n @dev To query the arguments of this function, get the \"Lockup\" event logs for the SHA256 hash of the preimage\n @param preimage Preimage of the swap\n @param amount Amount locked in the contract for the swap in WEI\n @param refundAddress Address that locked the Ether in the contract\n @param timelock Block height after which the locked Ether can be refunded"
                  },
                  "functionSelector": "c3c37fbc",
                  "id": 451,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claim",
                  "nameLocation": "3148:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "preimage",
                        "nameLocation": "3171:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "3163:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3163:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3194:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "3189:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3189:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "refundAddress",
                        "nameLocation": "3218:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "3210:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3210:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "3246:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "3241:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3241:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3153:107:1"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3270:0:1"
                  },
                  "scope": 607,
                  "src": "3139:1233:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 506,
                    "nodeType": "Block",
                    "src": "5106:587:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 464,
                                "name": "timelock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 460,
                                "src": "5290:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 465,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5302:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "5302:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5290:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4574686572537761703a207377617020686173206e6f742074696d6564206f757420796574",
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5316:39:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2db8331a5cee11314ddf88e305c14e3a8cbf16a75c667cf3825d2438733ecf36",
                                "typeString": "literal_string \"EtherSwap: swap has not timed out yet\""
                              },
                              "value": "EtherSwap: swap has not timed out yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2db8331a5cee11314ddf88e305c14e3a8cbf16a75c667cf3825d2438733ecf36",
                                "typeString": "literal_string \"EtherSwap: swap has not timed out yet\""
                              }
                            ],
                            "id": 463,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5282:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5282:74:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 470,
                        "nodeType": "ExpressionStatement",
                        "src": "5282:74:1"
                      },
                      {
                        "assignments": [
                          472
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 472,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "5375:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 506,
                            "src": "5367:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 471,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5367:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 481,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "5406:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 475,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "5432:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 476,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "5452:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 477,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5478:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5478:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 479,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 460,
                              "src": "5502:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "hashValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 535,
                            "src": "5382:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256,address,address,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5382:138:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5367:153:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 483,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "5549:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 482,
                            "name": "checkSwapIsLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5531:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5531:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 485,
                        "nodeType": "ExpressionStatement",
                        "src": "5531:23:1"
                      },
                      {
                        "expression": {
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5564:18:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 486,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "5571:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 488,
                            "indexExpression": {
                              "id": 487,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "5577:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5571:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 490,
                        "nodeType": "ExpressionStatement",
                        "src": "5564:18:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 492,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "5605:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 491,
                            "name": "Refund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "5598:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5598:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 494,
                        "nodeType": "EmitStatement",
                        "src": "5593:25:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 500,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5666:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5666:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5658:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 498,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5658:8:1",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5658:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 503,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "5679:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 495,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "5629:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$724_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferEther",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 632,
                            "src": "5629:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5629:57:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 505,
                        "nodeType": "ExpressionStatement",
                        "src": "5629:57:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 452,
                    "nodeType": "StructuredDocumentation",
                    "src": "4378:588:1",
                    "text": "Refunds Ether locked in the contract\n @dev To query the arguments of this function, get the \"Lockup\" event logs for your refund address and the preimage hash if you have it\n @dev For further explanations and reasoning behind the statements in this function, check the \"claim\" function\n @param preimageHash Preimage hash of the swap\n @param amount Amount locked in the contract for the swap in WEI\n @param claimAddress Address that that was destined to claim the funds\n @param timelock Block height after which the locked Ether can be refunded"
                  },
                  "functionSelector": "35cd4ccb",
                  "id": 507,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refund",
                  "nameLocation": "4980:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 454,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "5004:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "4996:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 453,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4996:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5031:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "5026:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5026:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "5055:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "5047:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5047:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "5082:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "5077:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5077:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4986:110:1"
                  },
                  "returnParameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5106:0:1"
                  },
                  "scope": 607,
                  "src": "4971:722:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "6348:182:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 526,
                                  "name": "preimageHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 510,
                                  "src": "6405:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 527,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "6431:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 528,
                                  "name": "claimAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 514,
                                  "src": "6451:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 529,
                                  "name": "refundAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "6477:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 530,
                                  "name": "timelock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 518,
                                  "src": "6504:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 524,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6375:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6375:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6375:147:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 523,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6365:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6365:158:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 522,
                        "id": 533,
                        "nodeType": "Return",
                        "src": "6358:165:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 508,
                    "nodeType": "StructuredDocumentation",
                    "src": "5724:428:1",
                    "text": "Hashes all the values of a swap with Keccak256\n @param preimageHash Preimage hash of the swap\n @param amount Amount the swap has locked in WEI\n @param claimAddress Address that can claim the locked Ether\n @param refundAddress Address that locked the Ether and can refund them\n @param timelock Block height after which the locked Ether can be refunded\n @return Value hash of the swap"
                  },
                  "functionSelector": "8b2f8f82",
                  "id": 535,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashValues",
                  "nameLocation": "6166:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "6194:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 535,
                        "src": "6186:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6186:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6221:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 535,
                        "src": "6216:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6216:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "6245:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 535,
                        "src": "6237:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "refundAddress",
                        "nameLocation": "6275:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 535,
                        "src": "6267:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6267:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "6303:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 535,
                        "src": "6298:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6298:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6176:141:1"
                  },
                  "returnParameters": {
                    "id": 522,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 521,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 535,
                        "src": "6339:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6339:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6338:9:1"
                  },
                  "scope": 607,
                  "src": "6157:373:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 589,
                    "nodeType": "Block",
                    "src": "7027:686:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 548,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "7102:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7111:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7102:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4574686572537761703a206c6f636b656420616d6f756e74206d757374206e6f74206265207a65726f",
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7114:43:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_970e82a7c16489f067a057e638d036a0d51ea621c5a5d4b9e69852865eae6c03",
                                "typeString": "literal_string \"EtherSwap: locked amount must not be zero\""
                              },
                              "value": "EtherSwap: locked amount must not be zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_970e82a7c16489f067a057e638d036a0d51ea621c5a5d4b9e69852865eae6c03",
                                "typeString": "literal_string \"EtherSwap: locked amount must not be zero\""
                              }
                            ],
                            "id": 547,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7094:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7094:64:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 553,
                        "nodeType": "ExpressionStatement",
                        "src": "7094:64:1"
                      },
                      {
                        "assignments": [
                          555
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 555,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "7216:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 589,
                            "src": "7208:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 554,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7208:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 564,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 557,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 538,
                              "src": "7247:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 558,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "7273:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 559,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "7293:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 560,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7319:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7319:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 562,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "7343:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 556,
                            "name": "hashValues",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 535,
                            "src": "7223:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256,address,address,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7223:138:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7208:153:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 566,
                                  "name": "swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 314,
                                  "src": "7441:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 568,
                                "indexExpression": {
                                  "id": 567,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 555,
                                  "src": "7447:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7441:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7456:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "7441:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4574686572537761703a20737761702065786973747320616c7265616479",
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7463:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_84547762f3f25b437d8d99092aef7ec890f7017cf392e0283173c4ba5e9f1d28",
                                "typeString": "literal_string \"EtherSwap: swap exists already\""
                              },
                              "value": "EtherSwap: swap exists already"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_84547762f3f25b437d8d99092aef7ec890f7017cf392e0283173c4ba5e9f1d28",
                                "typeString": "literal_string \"EtherSwap: swap exists already\""
                              }
                            ],
                            "id": 565,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7433:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7433:63:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "7433:63:1"
                      },
                      {
                        "expression": {
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 574,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "7573:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 576,
                            "indexExpression": {
                              "id": 575,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "7579:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7573:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7587:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7573:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "7573:18:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 581,
                              "name": "preimageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 538,
                              "src": "7649:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 582,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "7663:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 583,
                              "name": "claimAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "7671:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 584,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7685:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7685:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 586,
                              "name": "timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "7697:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 580,
                            "name": "Lockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 326,
                            "src": "7642:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,address,address,uint256)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7642:64:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 588,
                        "nodeType": "EmitStatement",
                        "src": "7637:69:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 536,
                    "nodeType": "StructuredDocumentation",
                    "src": "6562:361:1",
                    "text": "Locks Ether in the contract\n @notice The refund address is the sender of the transaction\n @param preimageHash Preimage hash of the swap\n @param amount Amount to be locked in the contract\n @param claimAddress Address that can claim the locked Ether\n @param timelock Block height after which the locked Ether can be refunded"
                  },
                  "id": 590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lockEther",
                  "nameLocation": "6937:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "preimageHash",
                        "nameLocation": "6955:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "6947:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6947:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6974:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "6969:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6969:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "claimAddress",
                        "nameLocation": "6990:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "6982:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6982:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 544,
                        "mutability": "mutable",
                        "name": "timelock",
                        "nameLocation": "7009:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "7004:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 543,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7004:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6946:72:1"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7027:0:1"
                  },
                  "scope": 607,
                  "src": "6928:785:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "7962:100:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 597,
                                  "name": "swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 314,
                                  "src": "7980:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 599,
                                "indexExpression": {
                                  "id": 598,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 593,
                                  "src": "7986:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7980:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7995:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "7980:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4574686572537761703a207377617020686173206e6f204574686572206c6f636b656420696e2074686520636f6e7472616374",
                              "id": 602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8001:53:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e7e26b7f1f09e2f872b50be970d7eba6618f8d72fdab297160a428161f69faac",
                                "typeString": "literal_string \"EtherSwap: swap has no Ether locked in the contract\""
                              },
                              "value": "EtherSwap: swap has no Ether locked in the contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e7e26b7f1f09e2f872b50be970d7eba6618f8d72fdab297160a428161f69faac",
                                "typeString": "literal_string \"EtherSwap: swap has no Ether locked in the contract\""
                              }
                            ],
                            "id": 596,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7972:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7972:83:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "ExpressionStatement",
                        "src": "7972:83:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 591,
                    "nodeType": "StructuredDocumentation",
                    "src": "7719:184:1",
                    "text": "Checks whether a swap has Ether locked in the contract\n @dev This function reverts if the swap has no Ether locked in the contract\n @param hash Value hash of the swap"
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkSwapIsLocked",
                  "nameLocation": "7917:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "7943:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "7935:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7934:14:1"
                  },
                  "returnParameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7962:0:1"
                  },
                  "scope": 607,
                  "src": "7908:154:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 608,
              "src": "147:7917:1",
              "usedErrors": []
            }
          ],
          "src": "47:8018:1"
        },
        "id": 1
      },
      "contracts/TransferHelper.sol": {
        "ast": {
          "absolutePath": "contracts/TransferHelper.sol",
          "exportedSymbols": {
            "TransferHelper": [
              724
            ]
          },
          "id": 725,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 609,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "181:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TransferHelper",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 724,
              "linearizedBaseContracts": [
                724
              ],
              "name": "TransferHelper",
              "nameLocation": "214:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 631,
                    "nodeType": "Block",
                    "src": "713:132:2",
                    "statements": [
                      {
                        "assignments": [
                          618,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 618,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "729:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 631,
                            "src": "724:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 617,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "724:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 625,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "765:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 619,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 612,
                                "src": "742:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "742:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 621,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 614,
                                "src": "757:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "742:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "742:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "723:45:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 627,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 618,
                              "src": "786:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657248656c7065723a20636f756c64206e6f74207472616e73666572204574686572",
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "795:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4",
                                "typeString": "literal_string \"TransferHelper: could not transfer Ether\""
                              },
                              "value": "TransferHelper: could not transfer Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3dd45f9e0126e819dd6a68ce3a7427e2d82056887751c84756c416cffb3b78d4",
                                "typeString": "literal_string \"TransferHelper: could not transfer Ether\""
                              }
                            ],
                            "id": 626,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "778:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "778:60:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 630,
                        "nodeType": "ExpressionStatement",
                        "src": "778:60:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 610,
                    "nodeType": "StructuredDocumentation",
                    "src": "235:408:2",
                    "text": "Transfers Ether to an address\n @dev This function reverts if transferring the Ether fails\n @dev Please note that \".call\" forwards all leftover gas which means that sending Ether to accounts and contract is possible but also that you should specify or sanity check the gas limit\n @param to Address to which the Ether should be sent\n @param amount Amount of Ether to send in WEI"
                  },
                  "id": 632,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferEther",
                  "nameLocation": "657:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 612,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "687:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "671:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "671:15:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 614,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "696:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "691:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 613,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "670:33:2"
                  },
                  "returnParameters": {
                    "id": 616,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "713:0:2"
                  },
                  "scope": 724,
                  "src": "648:197:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 675,
                    "nodeType": "Block",
                    "src": "1371:337:2",
                    "statements": [
                      {
                        "assignments": [
                          643,
                          645
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 643,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1453:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 675,
                            "src": "1448:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 642,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1448:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 645,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "1475:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 675,
                            "src": "1462:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 644,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1462:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 655,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30786139303539636262",
                                  "id": 650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1517:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2835717307_by_1",
                                    "typeString": "int_const 2835717307"
                                  },
                                  "value": "0xa9059cbb"
                                },
                                {
                                  "id": 651,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 637,
                                  "src": "1529:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 652,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "1533:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2835717307_by_1",
                                    "typeString": "int_const 2835717307"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 648,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1494:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1494:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1494:45:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 646,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "1483:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "1483:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1483:57:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1447:93:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 657,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 643,
                                "src": "1571:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 661,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 658,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 645,
                                          "src": "1583:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 659,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "1583:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 660,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1598:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "1583:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 664,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 645,
                                          "src": "1614:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 666,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1621:4:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 665,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1621:4:2",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 667,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "1620:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 662,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "1603:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 663,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "1603:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 668,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1603:24:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "1583:44:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 670,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1582:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1571:57:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366657220455243323020746f6b656e73",
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1642:49:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5ddbe4307f7934798b935bbbbff4735790ceff4998627aa232c5779314f13081",
                                "typeString": "literal_string \"TransferHelper: could not transfer ERC20 tokens\""
                              },
                              "value": "TransferHelper: could not transfer ERC20 tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5ddbe4307f7934798b935bbbbff4735790ceff4998627aa232c5779314f13081",
                                "typeString": "literal_string \"TransferHelper: could not transfer ERC20 tokens\""
                              }
                            ],
                            "id": 656,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1550:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1550:151:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 674,
                        "nodeType": "ExpressionStatement",
                        "src": "1550:151:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 633,
                    "nodeType": "StructuredDocumentation",
                    "src": "851:440:2",
                    "text": "Transfers token to an address\n @dev This function reverts if transferring the tokens fails\n @dev This function supports non standard ERC20 tokens that have a \"transfer\" method that does not return a boolean\n @param token Address of the token\n @param to Address to which the tokens should be transferred\n @param value Amount of token that should be transferred in the smallest denomination of the token"
                  },
                  "id": 676,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferToken",
                  "nameLocation": "1305:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1331:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "1323:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1323:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1346:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "1338:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1338:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1355:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "1350:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1350:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1322:39:2"
                  },
                  "returnParameters": {
                    "id": 641,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1371:0:2"
                  },
                  "scope": 724,
                  "src": "1296:412:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 722,
                    "nodeType": "Block",
                    "src": "2489:359:2",
                    "statements": [
                      {
                        "assignments": [
                          689,
                          691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 689,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2583:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 722,
                            "src": "2578:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 688,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2578:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 691,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "2605:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 722,
                            "src": "2592:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 690,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2592:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 702,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30783233623837326464",
                                  "id": 696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2647:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_599290589_by_1",
                                    "typeString": "int_const 599290589"
                                  },
                                  "value": "0x23b872dd"
                                },
                                {
                                  "id": 697,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 681,
                                  "src": "2659:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 698,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 683,
                                  "src": "2665:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 699,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 685,
                                  "src": "2669:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_599290589_by_1",
                                    "typeString": "int_const 599290589"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 694,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2624:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2624:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2624:51:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 692,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "2613:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2613:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2613:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2577:99:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 704,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 689,
                                "src": "2707:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 708,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 705,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 691,
                                          "src": "2719:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 706,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "2719:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2734:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "2719:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 711,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 691,
                                          "src": "2750:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 713,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "2757:4:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 712,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2757:4:2",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 714,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "2756:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 709,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "2739:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "2739:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2739:24:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2719:44:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 717,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2718:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2707:57:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366657246726f6d20455243323020746f6b656e73",
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2778:53:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10fea0c78e908f210d848e7a98d3cac77434f4acce985bbc4d4a1dc58ae1df2a",
                                "typeString": "literal_string \"TransferHelper: could not transferFrom ERC20 tokens\""
                              },
                              "value": "TransferHelper: could not transferFrom ERC20 tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_10fea0c78e908f210d848e7a98d3cac77434f4acce985bbc4d4a1dc58ae1df2a",
                                "typeString": "literal_string \"TransferHelper: could not transferFrom ERC20 tokens\""
                              }
                            ],
                            "id": 703,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2686:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2686:155:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "2686:155:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 677,
                    "nodeType": "StructuredDocumentation",
                    "src": "1714:677:2",
                    "text": "Transfers token from one address to another\n @dev This function reverts if transferring the tokens fails\n @dev This function supports non standard ERC20 tokens that have a \"transferFrom\" method that does not return a boolean\n @dev Keep in mind that \"transferFrom\" requires an allowance of the \"from\" address for the caller that is equal or greater than the \"value\"\n @param token Address of the token\n @param from Address from which the tokens should be transferred\n @param to Address to which the tokens should be transferred\n @param value Amount of token that should be transferred in the smallest denomination of the token"
                  },
                  "id": 723,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferTokenFrom",
                  "nameLocation": "2405:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 686,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2435:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 723,
                        "src": "2427:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2427:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2450:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 723,
                        "src": "2442:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2442:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2464:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 723,
                        "src": "2456:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2456:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2473:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 723,
                        "src": "2468:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2468:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2426:53:2"
                  },
                  "returnParameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2489:0:2"
                  },
                  "scope": 724,
                  "src": "2396:452:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 725,
              "src": "206:2644:2",
              "usedErrors": []
            }
          ],
          "src": "181:2670:2"
        },
        "id": 2
      }
    }
  }
}
